Index.PACKAGES = {"dev.profunktor" : [], "dev.profunktor.redis4cats.pubsub.internals" : [{"name" : "dev.profunktor.redis4cats.pubsub.internals.PubSubInternals", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/internals\/PubSubInternals$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "dev.profunktor.redis4cats.effect" : [{"name" : "dev.profunktor.redis4cats.effect.JRFuture", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html", "members_object" : [{"label" : "FutureLiftOps", "tail" : "", "member" : "dev.profunktor.redis4cats.effect.JRFuture.FutureLiftOps", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#FutureLiftOps[F[_],A]extendsAnyRef", "kind" : "implicit class"}, {"label" : "fromCompletableFuture", "tail" : "(fa: F[CompletableFuture[A]])(blocker: Blocker)(arg0: Concurrent[F], arg1: ContextShift[F]): F[A]", "member" : "dev.profunktor.redis4cats.effect.JRFuture.fromCompletableFuture", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#fromCompletableFuture[F[_],A](fa:F[java.util.concurrent.CompletableFuture[A]])(blocker:cats.effect.Blocker)(implicitevidence$6:cats.effect.Concurrent[F],implicitevidence$7:cats.effect.ContextShift[F]):F[A]", "kind" : "def"}, {"label" : "fromConnectionFuture", "tail" : "(fa: F[ConnectionFuture[A]])(blocker: Blocker)(arg0: Concurrent[F], arg1: ContextShift[F]): F[A]", "member" : "dev.profunktor.redis4cats.effect.JRFuture.fromConnectionFuture", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#fromConnectionFuture[F[_],A](fa:F[io.lettuce.core.ConnectionFuture[A]])(blocker:cats.effect.Blocker)(implicitevidence$4:cats.effect.Concurrent[F],implicitevidence$5:cats.effect.ContextShift[F]):F[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(fa: F[RedisFuture[A]])(blocker: Blocker)(arg0: Concurrent[F], arg1: ContextShift[F]): F[A]", "member" : "dev.profunktor.redis4cats.effect.JRFuture.apply", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#apply[F[_],A](fa:F[io.lettuce.core.RedisFuture[A]])(blocker:cats.effect.Blocker)(implicitevidence$2:cats.effect.Concurrent[F],implicitevidence$3:cats.effect.ContextShift[F]):F[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/effect\/JRFuture$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dev.profunktor.redis4cats.effect.Log", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Log[F]) ⇒ Boolean, msg: ⇒ Any): Log[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Log[F]) ⇒ Boolean): Log[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Log[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Log[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Log[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Log[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "error", "tail" : "(msg: ⇒ String): F[Unit]", "member" : "dev.profunktor.redis4cats.effect.Log.error", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#error(msg:=>String):F[Unit]", "kind" : "abstract def"}, {"label" : "info", "tail" : "(msg: ⇒ String): F[Unit]", "member" : "dev.profunktor.redis4cats.effect.Log.info", "link" : "dev\/profunktor\/redis4cats\/effect\/Log.html#info(msg:=>String):F[Unit]", "kind" : "abstract def"}], "shortDescription" : "Typeclass used for internal logging such as acquiring and releasing connections.", "object" : "dev\/profunktor\/redis4cats\/effect\/Log$.html", "members_object" : [{"label" : "Stdout", "tail" : "", "member" : "dev.profunktor.redis4cats.effect.Log.Stdout", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#Stdout", "kind" : "object"}, {"label" : "NoOp", "tail" : "", "member" : "dev.profunktor.redis4cats.effect.Log.NoOp", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#NoOp", "kind" : "object"}, {"label" : "apply", "tail" : "(ev: Log[F]): Log[F]", "member" : "dev.profunktor.redis4cats.effect.Log.apply", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#apply[F[_]](implicitev:dev.profunktor.redis4cats.effect.Log[F]):dev.profunktor.redis4cats.effect.Log[F]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/effect\/Log$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "dev\/profunktor\/redis4cats\/effect\/Log.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.effect.RedisBlocker", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RedisBlocker) ⇒ Boolean, msg: ⇒ Any): RedisBlocker", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RedisBlocker) ⇒ Boolean): RedisBlocker", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): RedisBlocker", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): RedisBlocker", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (RedisBlocker, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (RedisBlocker, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "ec", "tail" : "(): Blocker", "member" : "dev.profunktor.redis4cats.effect.RedisBlocker.ec", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html#ec:cats.effect.Blocker", "kind" : "abstract def"}], "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html", "members_object" : [{"label" : "apply", "tail" : "(blocker: Blocker): RedisBlocker", "member" : "dev.profunktor.redis4cats.effect.RedisBlocker.apply", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#apply(blocker:cats.effect.Blocker):dev.profunktor.redis4cats.effect.RedisBlocker", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "dev\/profunktor\/redis4cats\/effect\/RedisBlocker.html", "kind" : "trait"}], "dev.profunktor.redis4cats.algebra" : [{"name" : "dev.profunktor.redis4cats.algebra.AutoFlush", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AutoFlush[F]) ⇒ Boolean, msg: ⇒ Any): AutoFlush[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (AutoFlush[F]) ⇒ Boolean): AutoFlush[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): AutoFlush[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): AutoFlush[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (AutoFlush[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (AutoFlush[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "flushCommands", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.AutoFlush.flushCommands", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#flushCommands:F[Unit]", "kind" : "abstract def"}, {"label" : "disableAutoFlush", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.AutoFlush.disableAutoFlush", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#disableAutoFlush:F[Unit]", "kind" : "abstract def"}, {"label" : "enableAutoFlush", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.AutoFlush.enableAutoFlush", "link" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html#enableAutoFlush:F[Unit]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/AutoFlush.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.Bits", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Bits[F, K, V]) ⇒ Boolean, msg: ⇒ Any): Bits[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Bits[F, K, V]) ⇒ Boolean): Bits[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Bits[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Bits[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Bits[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Bits[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "bitOpXor", "tail" : "(destination: K, sources: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitOpXor", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#bitOpXor(destination:K,sources:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "bitOpOr", "tail" : "(destination: K, sources: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitOpOr", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#bitOpOr(destination:K,sources:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "bitOpNot", "tail" : "(destination: K, source: K): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitOpNot", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#bitOpNot(destination:K,source:K):F[Unit]", "kind" : "abstract def"}, {"label" : "bitOpAnd", "tail" : "(destination: K, sources: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitOpAnd", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#bitOpAnd(destination:K,sources:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "bitPos", "tail" : "(key: K, state: Boolean, start: Long, end: Long): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitPos", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#bitPos(key:K,state:Boolean,start:Long,end:Long):F[Long]", "kind" : "abstract def"}, {"label" : "bitPos", "tail" : "(key: K, state: Boolean, start: Long): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitPos", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#bitPos(key:K,state:Boolean,start:Long):F[Long]", "kind" : "abstract def"}, {"label" : "bitPos", "tail" : "(key: K, state: Boolean): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitPos", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#bitPos(key:K,state:Boolean):F[Long]", "kind" : "abstract def"}, {"label" : "bitCount", "tail" : "(key: K, start: Long, end: Long): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitCount", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#bitCount(key:K,start:Long,end:Long):F[Long]", "kind" : "abstract def"}, {"label" : "bitCount", "tail" : "(key: K): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitCount", "link" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html#bitCount(key:K):F[Long]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/Bits.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.ConnectionCommands", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConnectionCommands[F]) ⇒ Boolean, msg: ⇒ Any): ConnectionCommands[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ConnectionCommands[F]) ⇒ Boolean): ConnectionCommands[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ConnectionCommands[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ConnectionCommands[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ConnectionCommands[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ConnectionCommands[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "ping", "tail" : "(): F[String]", "member" : "dev.profunktor.redis4cats.algebra.Ping.ping", "link" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html#ping:F[String]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/ConnectionCommands.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.Decrement", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Decrement[F, K, V]) ⇒ Boolean, msg: ⇒ Any): Decrement[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Decrement[F, K, V]) ⇒ Boolean): Decrement[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Decrement[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Decrement[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Decrement[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Decrement[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "decrBy", "tail" : "(key: K, amount: Long)(N: Numeric[V]): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Decrement.decrBy", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#decrBy(key:K,amount:Long)(implicitN:Numeric[V]):F[Long]", "kind" : "abstract def"}, {"label" : "decr", "tail" : "(key: K)(N: Numeric[V]): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Decrement.decr", "link" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html#decr(key:K)(implicitN:Numeric[V]):F[Long]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/Decrement.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.Diagnostic", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Diagnostic[F]) ⇒ Boolean, msg: ⇒ Any): Diagnostic[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Diagnostic[F]) ⇒ Boolean): Diagnostic[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Diagnostic[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Diagnostic[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Diagnostic[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Diagnostic[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "slowLogLen", "tail" : "(): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Diagnostic.slowLogLen", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#slowLogLen:F[Long]", "kind" : "abstract def"}, {"label" : "lastSave", "tail" : "(): F[Instant]", "member" : "dev.profunktor.redis4cats.algebra.Diagnostic.lastSave", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#lastSave:F[java.time.Instant]", "kind" : "abstract def"}, {"label" : "dbsize", "tail" : "(): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Diagnostic.dbsize", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#dbsize:F[Long]", "kind" : "abstract def"}, {"label" : "info", "tail" : "(): F[Map[String, String]]", "member" : "dev.profunktor.redis4cats.algebra.Diagnostic.info", "link" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html#info:F[Map[String,String]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/Diagnostic.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.Flush", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Flush[F, K]) ⇒ Boolean, msg: ⇒ Any): Flush[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Flush[F, K]) ⇒ Boolean): Flush[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Flush[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Flush[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Flush[F, K], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Flush[F, K], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "flushAllAsync", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Flush.flushAllAsync", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#flushAllAsync:F[Unit]", "kind" : "abstract def"}, {"label" : "flushAll", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Flush.flushAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#flushAll:F[Unit]", "kind" : "abstract def"}, {"label" : "keys", "tail" : "(key: K): F[List[K]]", "member" : "dev.profunktor.redis4cats.algebra.Flush.keys", "link" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html#keys(key:K):F[List[K]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/Flush.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.GeoCommands", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GeoCommands[F, K, V]) ⇒ Boolean, msg: ⇒ Any): GeoCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GeoCommands[F, K, V]) ⇒ Boolean): GeoCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): GeoCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): GeoCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (GeoCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (GeoCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "geoRadiusByMember", "tail" : "(key: K, value: V, dist: Distance, unit: Unit, storage: GeoRadiusDistStorage[K]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.GeoSetter.geoRadiusByMember", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#geoRadiusByMember(key:K,value:V,dist:dev.profunktor.redis4cats.effects.Distance,unit:io.lettuce.core.GeoArgs.Unit,storage:dev.profunktor.redis4cats.effects.GeoRadiusDistStorage[K]):F[Unit]", "kind" : "abstract def"}, {"label" : "geoRadiusByMember", "tail" : "(key: K, value: V, dist: Distance, unit: Unit, storage: GeoRadiusKeyStorage[K]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.GeoSetter.geoRadiusByMember", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#geoRadiusByMember(key:K,value:V,dist:dev.profunktor.redis4cats.effects.Distance,unit:io.lettuce.core.GeoArgs.Unit,storage:dev.profunktor.redis4cats.effects.GeoRadiusKeyStorage[K]):F[Unit]", "kind" : "abstract def"}, {"label" : "geoRadius", "tail" : "(key: K, geoRadius: GeoRadius, unit: Unit, storage: GeoRadiusDistStorage[K]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.GeoSetter.geoRadius", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#geoRadius(key:K,geoRadius:dev.profunktor.redis4cats.effects.GeoRadius,unit:io.lettuce.core.GeoArgs.Unit,storage:dev.profunktor.redis4cats.effects.GeoRadiusDistStorage[K]):F[Unit]", "kind" : "abstract def"}, {"label" : "geoRadius", "tail" : "(key: K, geoRadius: GeoRadius, unit: Unit, storage: GeoRadiusKeyStorage[K]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.GeoSetter.geoRadius", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#geoRadius(key:K,geoRadius:dev.profunktor.redis4cats.effects.GeoRadius,unit:io.lettuce.core.GeoArgs.Unit,storage:dev.profunktor.redis4cats.effects.GeoRadiusKeyStorage[K]):F[Unit]", "kind" : "abstract def"}, {"label" : "geoAdd", "tail" : "(key: K, geoValues: GeoLocation[V]*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.GeoSetter.geoAdd", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#geoAdd(key:K,geoValues:dev.profunktor.redis4cats.effects.GeoLocation[V]*):F[Unit]", "kind" : "abstract def"}, {"label" : "geoRadiusByMember", "tail" : "(key: K, value: V, dist: Distance, unit: Unit, args: GeoArgs): F[List[GeoRadiusResult[V]]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoRadiusByMember", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#geoRadiusByMember(key:K,value:V,dist:dev.profunktor.redis4cats.effects.Distance,unit:io.lettuce.core.GeoArgs.Unit,args:io.lettuce.core.GeoArgs):F[List[dev.profunktor.redis4cats.effects.GeoRadiusResult[V]]]", "kind" : "abstract def"}, {"label" : "geoRadiusByMember", "tail" : "(key: K, value: V, dist: Distance, unit: Unit): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoRadiusByMember", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#geoRadiusByMember(key:K,value:V,dist:dev.profunktor.redis4cats.effects.Distance,unit:io.lettuce.core.GeoArgs.Unit):F[Set[V]]", "kind" : "abstract def"}, {"label" : "geoRadius", "tail" : "(key: K, geoRadius: GeoRadius, unit: Unit, args: GeoArgs): F[List[GeoRadiusResult[V]]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoRadius", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#geoRadius(key:K,geoRadius:dev.profunktor.redis4cats.effects.GeoRadius,unit:io.lettuce.core.GeoArgs.Unit,args:io.lettuce.core.GeoArgs):F[List[dev.profunktor.redis4cats.effects.GeoRadiusResult[V]]]", "kind" : "abstract def"}, {"label" : "geoRadius", "tail" : "(key: K, geoRadius: GeoRadius, unit: Unit): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoRadius", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#geoRadius(key:K,geoRadius:dev.profunktor.redis4cats.effects.GeoRadius,unit:io.lettuce.core.GeoArgs.Unit):F[Set[V]]", "kind" : "abstract def"}, {"label" : "geoPos", "tail" : "(key: K, values: V*): F[List[GeoCoordinate]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoPos", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#geoPos(key:K,values:V*):F[List[dev.profunktor.redis4cats.effects.GeoCoordinate]]", "kind" : "abstract def"}, {"label" : "geoHash", "tail" : "(key: K, values: V*): F[List[Option[String]]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoHash", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#geoHash(key:K,values:V*):F[List[Option[String]]]", "kind" : "abstract def"}, {"label" : "geoDist", "tail" : "(key: K, from: V, to: V, unit: Unit): F[Double]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoDist", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html#geoDist(key:K,from:V,to:V,unit:io.lettuce.core.GeoArgs.Unit):F[Double]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/GeoCommands.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.GeoGetter", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GeoGetter[F, K, V]) ⇒ Boolean, msg: ⇒ Any): GeoGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GeoGetter[F, K, V]) ⇒ Boolean): GeoGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): GeoGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): GeoGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (GeoGetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (GeoGetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "geoRadiusByMember", "tail" : "(key: K, value: V, dist: Distance, unit: Unit, args: GeoArgs): F[List[GeoRadiusResult[V]]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoRadiusByMember", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#geoRadiusByMember(key:K,value:V,dist:dev.profunktor.redis4cats.effects.Distance,unit:io.lettuce.core.GeoArgs.Unit,args:io.lettuce.core.GeoArgs):F[List[dev.profunktor.redis4cats.effects.GeoRadiusResult[V]]]", "kind" : "abstract def"}, {"label" : "geoRadiusByMember", "tail" : "(key: K, value: V, dist: Distance, unit: Unit): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoRadiusByMember", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#geoRadiusByMember(key:K,value:V,dist:dev.profunktor.redis4cats.effects.Distance,unit:io.lettuce.core.GeoArgs.Unit):F[Set[V]]", "kind" : "abstract def"}, {"label" : "geoRadius", "tail" : "(key: K, geoRadius: GeoRadius, unit: Unit, args: GeoArgs): F[List[GeoRadiusResult[V]]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoRadius", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#geoRadius(key:K,geoRadius:dev.profunktor.redis4cats.effects.GeoRadius,unit:io.lettuce.core.GeoArgs.Unit,args:io.lettuce.core.GeoArgs):F[List[dev.profunktor.redis4cats.effects.GeoRadiusResult[V]]]", "kind" : "abstract def"}, {"label" : "geoRadius", "tail" : "(key: K, geoRadius: GeoRadius, unit: Unit): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoRadius", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#geoRadius(key:K,geoRadius:dev.profunktor.redis4cats.effects.GeoRadius,unit:io.lettuce.core.GeoArgs.Unit):F[Set[V]]", "kind" : "abstract def"}, {"label" : "geoPos", "tail" : "(key: K, values: V*): F[List[GeoCoordinate]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoPos", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#geoPos(key:K,values:V*):F[List[dev.profunktor.redis4cats.effects.GeoCoordinate]]", "kind" : "abstract def"}, {"label" : "geoHash", "tail" : "(key: K, values: V*): F[List[Option[String]]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoHash", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#geoHash(key:K,values:V*):F[List[Option[String]]]", "kind" : "abstract def"}, {"label" : "geoDist", "tail" : "(key: K, from: V, to: V, unit: Unit): F[Double]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoDist", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html#geoDist(key:K,from:V,to:V,unit:io.lettuce.core.GeoArgs.Unit):F[Double]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/GeoGetter.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.GeoSetter", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GeoSetter[F, K, V]) ⇒ Boolean, msg: ⇒ Any): GeoSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (GeoSetter[F, K, V]) ⇒ Boolean): GeoSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): GeoSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): GeoSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (GeoSetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (GeoSetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "geoRadiusByMember", "tail" : "(key: K, value: V, dist: Distance, unit: Unit, storage: GeoRadiusDistStorage[K]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.GeoSetter.geoRadiusByMember", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#geoRadiusByMember(key:K,value:V,dist:dev.profunktor.redis4cats.effects.Distance,unit:io.lettuce.core.GeoArgs.Unit,storage:dev.profunktor.redis4cats.effects.GeoRadiusDistStorage[K]):F[Unit]", "kind" : "abstract def"}, {"label" : "geoRadiusByMember", "tail" : "(key: K, value: V, dist: Distance, unit: Unit, storage: GeoRadiusKeyStorage[K]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.GeoSetter.geoRadiusByMember", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#geoRadiusByMember(key:K,value:V,dist:dev.profunktor.redis4cats.effects.Distance,unit:io.lettuce.core.GeoArgs.Unit,storage:dev.profunktor.redis4cats.effects.GeoRadiusKeyStorage[K]):F[Unit]", "kind" : "abstract def"}, {"label" : "geoRadius", "tail" : "(key: K, geoRadius: GeoRadius, unit: Unit, storage: GeoRadiusDistStorage[K]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.GeoSetter.geoRadius", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#geoRadius(key:K,geoRadius:dev.profunktor.redis4cats.effects.GeoRadius,unit:io.lettuce.core.GeoArgs.Unit,storage:dev.profunktor.redis4cats.effects.GeoRadiusDistStorage[K]):F[Unit]", "kind" : "abstract def"}, {"label" : "geoRadius", "tail" : "(key: K, geoRadius: GeoRadius, unit: Unit, storage: GeoRadiusKeyStorage[K]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.GeoSetter.geoRadius", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#geoRadius(key:K,geoRadius:dev.profunktor.redis4cats.effects.GeoRadius,unit:io.lettuce.core.GeoArgs.Unit,storage:dev.profunktor.redis4cats.effects.GeoRadiusKeyStorage[K]):F[Unit]", "kind" : "abstract def"}, {"label" : "geoAdd", "tail" : "(key: K, geoValues: GeoLocation[V]*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.GeoSetter.geoAdd", "link" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html#geoAdd(key:K,geoValues:dev.profunktor.redis4cats.effects.GeoLocation[V]*):F[Unit]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/GeoSetter.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.Getter", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Getter[F, K, V]) ⇒ Boolean, msg: ⇒ Any): Getter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Getter[F, K, V]) ⇒ Boolean): Getter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Getter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Getter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Getter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Getter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "strLen", "tail" : "(key: K): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.Getter.strLen", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#strLen(key:K):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "getRange", "tail" : "(key: K, start: Long, end: Long): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.Getter.getRange", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#getRange(key:K,start:Long,end:Long):F[Option[V]]", "kind" : "abstract def"}, {"label" : "getBit", "tail" : "(key: K, offset: Long): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.Getter.getBit", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#getBit(key:K,offset:Long):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(key: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.Getter.get", "link" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html#get(key:K):F[Option[V]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/Getter.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.HashCommands", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (HashCommands[F, K, V]) ⇒ Boolean, msg: ⇒ Any): HashCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (HashCommands[F, K, V]) ⇒ Boolean): HashCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): HashCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): HashCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (HashCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (HashCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "hExists", "tail" : "(key: K, field: K): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.HashCommands.hExists", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#hExists(key:K,field:K):F[Boolean]", "kind" : "abstract def"}, {"label" : "hDel", "tail" : "(key: K, fields: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.HashCommands.hDel", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#hDel(key:K,fields:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "hIncrByFloat", "tail" : "(key: K, field: K, amount: Double)(N: Numeric[V]): F[Double]", "member" : "dev.profunktor.redis4cats.algebra.HashIncrement.hIncrByFloat", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#hIncrByFloat(key:K,field:K,amount:Double)(implicitN:Numeric[V]):F[Double]", "kind" : "abstract def"}, {"label" : "hIncrBy", "tail" : "(key: K, field: K, amount: Long)(N: Numeric[V]): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.HashIncrement.hIncrBy", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#hIncrBy(key:K,field:K,amount:Long)(implicitN:Numeric[V]):F[Long]", "kind" : "abstract def"}, {"label" : "hmSet", "tail" : "(key: K, fieldValues: Map[K, V]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.HashSetter.hmSet", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#hmSet(key:K,fieldValues:Map[K,V]):F[Unit]", "kind" : "abstract def"}, {"label" : "hSetNx", "tail" : "(key: K, field: K, value: V): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.HashSetter.hSetNx", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#hSetNx(key:K,field:K,value:V):F[Boolean]", "kind" : "abstract def"}, {"label" : "hSet", "tail" : "(key: K, field: K, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.HashSetter.hSet", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#hSet(key:K,field:K,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "hLen", "tail" : "(key: K): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hLen", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#hLen(key:K):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "hStrLen", "tail" : "(key: K, field: K): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hStrLen", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#hStrLen(key:K,field:K):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "hVals", "tail" : "(key: K): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hVals", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#hVals(key:K):F[List[V]]", "kind" : "abstract def"}, {"label" : "hKeys", "tail" : "(key: K): F[List[K]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hKeys", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#hKeys(key:K):F[List[K]]", "kind" : "abstract def"}, {"label" : "hmGet", "tail" : "(key: K, fields: K*): F[Map[K, V]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hmGet", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#hmGet(key:K,fields:K*):F[Map[K,V]]", "kind" : "abstract def"}, {"label" : "hGetAll", "tail" : "(key: K): F[Map[K, V]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hGetAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#hGetAll(key:K):F[Map[K,V]]", "kind" : "abstract def"}, {"label" : "hGet", "tail" : "(key: K, field: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hGet", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html#hGet(key:K,field:K):F[Option[V]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/HashCommands.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.HashGetter", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (HashGetter[F, K, V]) ⇒ Boolean, msg: ⇒ Any): HashGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (HashGetter[F, K, V]) ⇒ Boolean): HashGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): HashGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): HashGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (HashGetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (HashGetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "hLen", "tail" : "(key: K): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hLen", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#hLen(key:K):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "hStrLen", "tail" : "(key: K, field: K): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hStrLen", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#hStrLen(key:K,field:K):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "hVals", "tail" : "(key: K): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hVals", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#hVals(key:K):F[List[V]]", "kind" : "abstract def"}, {"label" : "hKeys", "tail" : "(key: K): F[List[K]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hKeys", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#hKeys(key:K):F[List[K]]", "kind" : "abstract def"}, {"label" : "hmGet", "tail" : "(key: K, fields: K*): F[Map[K, V]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hmGet", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#hmGet(key:K,fields:K*):F[Map[K,V]]", "kind" : "abstract def"}, {"label" : "hGetAll", "tail" : "(key: K): F[Map[K, V]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hGetAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#hGetAll(key:K):F[Map[K,V]]", "kind" : "abstract def"}, {"label" : "hGet", "tail" : "(key: K, field: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hGet", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html#hGet(key:K,field:K):F[Option[V]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/HashGetter.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.HashIncrement", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (HashIncrement[F, K, V]) ⇒ Boolean, msg: ⇒ Any): HashIncrement[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (HashIncrement[F, K, V]) ⇒ Boolean): HashIncrement[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): HashIncrement[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): HashIncrement[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (HashIncrement[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (HashIncrement[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "hIncrByFloat", "tail" : "(key: K, field: K, amount: Double)(N: Numeric[V]): F[Double]", "member" : "dev.profunktor.redis4cats.algebra.HashIncrement.hIncrByFloat", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#hIncrByFloat(key:K,field:K,amount:Double)(implicitN:Numeric[V]):F[Double]", "kind" : "abstract def"}, {"label" : "hIncrBy", "tail" : "(key: K, field: K, amount: Long)(N: Numeric[V]): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.HashIncrement.hIncrBy", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html#hIncrBy(key:K,field:K,amount:Long)(implicitN:Numeric[V]):F[Long]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/HashIncrement.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.HashSetter", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (HashSetter[F, K, V]) ⇒ Boolean, msg: ⇒ Any): HashSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (HashSetter[F, K, V]) ⇒ Boolean): HashSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): HashSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): HashSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (HashSetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (HashSetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "hmSet", "tail" : "(key: K, fieldValues: Map[K, V]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.HashSetter.hmSet", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#hmSet(key:K,fieldValues:Map[K,V]):F[Unit]", "kind" : "abstract def"}, {"label" : "hSetNx", "tail" : "(key: K, field: K, value: V): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.HashSetter.hSetNx", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#hSetNx(key:K,field:K,value:V):F[Boolean]", "kind" : "abstract def"}, {"label" : "hSet", "tail" : "(key: K, field: K, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.HashSetter.hSet", "link" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html#hSet(key:K,field:K,value:V):F[Unit]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/HashSetter.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.Increment", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Increment[F, K, V]) ⇒ Boolean, msg: ⇒ Any): Increment[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Increment[F, K, V]) ⇒ Boolean): Increment[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Increment[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Increment[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Increment[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Increment[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "incrByFloat", "tail" : "(key: K, amount: Double)(N: Numeric[V]): F[Double]", "member" : "dev.profunktor.redis4cats.algebra.Increment.incrByFloat", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#incrByFloat(key:K,amount:Double)(implicitN:Numeric[V]):F[Double]", "kind" : "abstract def"}, {"label" : "incrBy", "tail" : "(key: K, amount: Long)(N: Numeric[V]): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Increment.incrBy", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#incrBy(key:K,amount:Long)(implicitN:Numeric[V]):F[Long]", "kind" : "abstract def"}, {"label" : "incr", "tail" : "(key: K)(N: Numeric[V]): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Increment.incr", "link" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html#incr(key:K)(implicitN:Numeric[V]):F[Long]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/Increment.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.KeyCommands", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (KeyCommands[F, K]) ⇒ Boolean, msg: ⇒ Any): KeyCommands[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (KeyCommands[F, K]) ⇒ Boolean): KeyCommands[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): KeyCommands[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): KeyCommands[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (KeyCommands[F, K], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (KeyCommands[F, K], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "scan", "tail" : "(cursor: Long): F[KeyScanCursor[K]]", "member" : "dev.profunktor.redis4cats.algebra.KeyCommands.scan", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#scan(cursor:Long):F[dev.profunktor.redis4cats.data.KeyScanCursor[K]]", "kind" : "abstract def"}, {"label" : "scan", "tail" : "(): F[KeyScanCursor[K]]", "member" : "dev.profunktor.redis4cats.algebra.KeyCommands.scan", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#scan:F[dev.profunktor.redis4cats.data.KeyScanCursor[K]]", "kind" : "abstract def"}, {"label" : "pttl", "tail" : "(key: K): F[Option[FiniteDuration]]", "member" : "dev.profunktor.redis4cats.algebra.KeyCommands.pttl", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#pttl(key:K):F[Option[scala.concurrent.duration.FiniteDuration]]", "kind" : "abstract def"}, {"label" : "ttl", "tail" : "(key: K): F[Option[FiniteDuration]]", "member" : "dev.profunktor.redis4cats.algebra.KeyCommands.ttl", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#ttl(key:K):F[Option[scala.concurrent.duration.FiniteDuration]]", "kind" : "abstract def"}, {"label" : "expire", "tail" : "(k: K, seconds: FiniteDuration): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.KeyCommands.expire", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#expire(k:K,seconds:scala.concurrent.duration.FiniteDuration):F[Unit]", "kind" : "abstract def"}, {"label" : "exists", "tail" : "(key: K*): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.KeyCommands.exists", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#exists(key:K*):F[Boolean]", "kind" : "abstract def"}, {"label" : "del", "tail" : "(key: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.KeyCommands.del", "link" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html#del(key:K*):F[Unit]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/KeyCommands.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.ListBlocking", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ListBlocking[F, K, V]) ⇒ Boolean, msg: ⇒ Any): ListBlocking[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ListBlocking[F, K, V]) ⇒ Boolean): ListBlocking[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ListBlocking[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ListBlocking[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ListBlocking[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ListBlocking[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "brPopLPush", "tail" : "(timeout: Duration, source: K, destination: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListBlocking.brPopLPush", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#brPopLPush(timeout:scala.concurrent.duration.Duration,source:K,destination:K):F[Option[V]]", "kind" : "abstract def"}, {"label" : "brPop", "tail" : "(timeout: Duration, keys: K*): F[(K, V)]", "member" : "dev.profunktor.redis4cats.algebra.ListBlocking.brPop", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#brPop(timeout:scala.concurrent.duration.Duration,keys:K*):F[(K,V)]", "kind" : "abstract def"}, {"label" : "blPop", "tail" : "(timeout: Duration, keys: K*): F[(K, V)]", "member" : "dev.profunktor.redis4cats.algebra.ListBlocking.blPop", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html#blPop(timeout:scala.concurrent.duration.Duration,keys:K*):F[(K,V)]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/ListBlocking.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.ListCommands", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ListCommands[F, K, V]) ⇒ Boolean, msg: ⇒ Any): ListCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ListCommands[F, K, V]) ⇒ Boolean): ListCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ListCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ListCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ListCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ListCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "rPushX", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.rPushX", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#rPushX(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "rPush", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.rPush", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#rPush(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "rPopLPush", "tail" : "(source: K, destination: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.rPopLPush", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#rPopLPush(source:K,destination:K):F[Option[V]]", "kind" : "abstract def"}, {"label" : "rPop", "tail" : "(key: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.rPop", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#rPop(key:K):F[Option[V]]", "kind" : "abstract def"}, {"label" : "lPushX", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.lPushX", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#lPushX(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "lPush", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.lPush", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#lPush(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "lPop", "tail" : "(key: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.lPop", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#lPop(key:K):F[Option[V]]", "kind" : "abstract def"}, {"label" : "lTrim", "tail" : "(key: K, start: Long, stop: Long): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListSetter.lTrim", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#lTrim(key:K,start:Long,stop:Long):F[Unit]", "kind" : "abstract def"}, {"label" : "lSet", "tail" : "(key: K, index: Long, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListSetter.lSet", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#lSet(key:K,index:Long,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "lRem", "tail" : "(key: K, count: Long, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListSetter.lRem", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#lRem(key:K,count:Long,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "lInsertBefore", "tail" : "(key: K, pivot: V, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListSetter.lInsertBefore", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#lInsertBefore(key:K,pivot:V,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "lInsertAfter", "tail" : "(key: K, pivot: V, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListSetter.lInsertAfter", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#lInsertAfter(key:K,pivot:V,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "lRange", "tail" : "(key: K, start: Long, stop: Long): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListGetter.lRange", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#lRange(key:K,start:Long,stop:Long):F[List[V]]", "kind" : "abstract def"}, {"label" : "lLen", "tail" : "(key: K): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.ListGetter.lLen", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#lLen(key:K):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "lIndex", "tail" : "(key: K, index: Long): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListGetter.lIndex", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#lIndex(key:K,index:Long):F[Option[V]]", "kind" : "abstract def"}, {"label" : "brPopLPush", "tail" : "(timeout: Duration, source: K, destination: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListBlocking.brPopLPush", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#brPopLPush(timeout:scala.concurrent.duration.Duration,source:K,destination:K):F[Option[V]]", "kind" : "abstract def"}, {"label" : "brPop", "tail" : "(timeout: Duration, keys: K*): F[(K, V)]", "member" : "dev.profunktor.redis4cats.algebra.ListBlocking.brPop", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#brPop(timeout:scala.concurrent.duration.Duration,keys:K*):F[(K,V)]", "kind" : "abstract def"}, {"label" : "blPop", "tail" : "(timeout: Duration, keys: K*): F[(K, V)]", "member" : "dev.profunktor.redis4cats.algebra.ListBlocking.blPop", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html#blPop(timeout:scala.concurrent.duration.Duration,keys:K*):F[(K,V)]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/ListCommands.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.ListGetter", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ListGetter[F, K, V]) ⇒ Boolean, msg: ⇒ Any): ListGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ListGetter[F, K, V]) ⇒ Boolean): ListGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ListGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ListGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ListGetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ListGetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "lRange", "tail" : "(key: K, start: Long, stop: Long): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListGetter.lRange", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#lRange(key:K,start:Long,stop:Long):F[List[V]]", "kind" : "abstract def"}, {"label" : "lLen", "tail" : "(key: K): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.ListGetter.lLen", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#lLen(key:K):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "lIndex", "tail" : "(key: K, index: Long): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListGetter.lIndex", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html#lIndex(key:K,index:Long):F[Option[V]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/ListGetter.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.ListPushPop", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ListPushPop[F, K, V]) ⇒ Boolean, msg: ⇒ Any): ListPushPop[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ListPushPop[F, K, V]) ⇒ Boolean): ListPushPop[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ListPushPop[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ListPushPop[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ListPushPop[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ListPushPop[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "rPushX", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.rPushX", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#rPushX(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "rPush", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.rPush", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#rPush(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "rPopLPush", "tail" : "(source: K, destination: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.rPopLPush", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#rPopLPush(source:K,destination:K):F[Option[V]]", "kind" : "abstract def"}, {"label" : "rPop", "tail" : "(key: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.rPop", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#rPop(key:K):F[Option[V]]", "kind" : "abstract def"}, {"label" : "lPushX", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.lPushX", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#lPushX(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "lPush", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.lPush", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#lPush(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "lPop", "tail" : "(key: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.lPop", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html#lPop(key:K):F[Option[V]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/ListPushPop.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.ListSetter", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ListSetter[F, K, V]) ⇒ Boolean, msg: ⇒ Any): ListSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ListSetter[F, K, V]) ⇒ Boolean): ListSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ListSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ListSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ListSetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ListSetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "lTrim", "tail" : "(key: K, start: Long, stop: Long): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListSetter.lTrim", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#lTrim(key:K,start:Long,stop:Long):F[Unit]", "kind" : "abstract def"}, {"label" : "lSet", "tail" : "(key: K, index: Long, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListSetter.lSet", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#lSet(key:K,index:Long,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "lRem", "tail" : "(key: K, count: Long, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListSetter.lRem", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#lRem(key:K,count:Long,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "lInsertBefore", "tail" : "(key: K, pivot: V, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListSetter.lInsertBefore", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#lInsertBefore(key:K,pivot:V,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "lInsertAfter", "tail" : "(key: K, pivot: V, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListSetter.lInsertAfter", "link" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html#lInsertAfter(key:K,pivot:V,value:V):F[Unit]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/ListSetter.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.MultiKey", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MultiKey[F, K, V]) ⇒ Boolean, msg: ⇒ Any): MultiKey[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (MultiKey[F, K, V]) ⇒ Boolean): MultiKey[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): MultiKey[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): MultiKey[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (MultiKey[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (MultiKey[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "mSetNx", "tail" : "(keyValues: Map[K, V]): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.MultiKey.mSetNx", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#mSetNx(keyValues:Map[K,V]):F[Boolean]", "kind" : "abstract def"}, {"label" : "mSet", "tail" : "(keyValues: Map[K, V]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.MultiKey.mSet", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#mSet(keyValues:Map[K,V]):F[Unit]", "kind" : "abstract def"}, {"label" : "mGet", "tail" : "(keys: Set[K]): F[Map[K, V]]", "member" : "dev.profunktor.redis4cats.algebra.MultiKey.mGet", "link" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html#mGet(keys:Set[K]):F[Map[K,V]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/MultiKey.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.Ping", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Ping[F]) ⇒ Boolean, msg: ⇒ Any): Ping[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Ping[F]) ⇒ Boolean): Ping[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Ping[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Ping[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Ping[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Ping[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "ping", "tail" : "(): F[String]", "member" : "dev.profunktor.redis4cats.algebra.Ping.ping", "link" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html#ping:F[String]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/Ping.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.PipelineCommands", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PipelineCommands[F]) ⇒ Boolean, msg: ⇒ Any): PipelineCommands[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PipelineCommands[F]) ⇒ Boolean): PipelineCommands[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PipelineCommands[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PipelineCommands[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PipelineCommands[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PipelineCommands[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "flushCommands", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.AutoFlush.flushCommands", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#flushCommands:F[Unit]", "kind" : "abstract def"}, {"label" : "disableAutoFlush", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.AutoFlush.disableAutoFlush", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#disableAutoFlush:F[Unit]", "kind" : "abstract def"}, {"label" : "enableAutoFlush", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.AutoFlush.enableAutoFlush", "link" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html#enableAutoFlush:F[Unit]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/PipelineCommands.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.ScriptCommands", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ScriptCommands[F, K, V]) ⇒ Boolean, msg: ⇒ Any): ScriptCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ScriptCommands[F, K, V]) ⇒ Boolean): ScriptCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ScriptCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ScriptCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ScriptCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ScriptCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "scriptFlush", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.scriptFlush", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#scriptFlush:F[Unit]", "kind" : "abstract def"}, {"label" : "scriptExists", "tail" : "(digests: String*): F[List[Boolean]]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.scriptExists", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#scriptExists(digests:String*):F[List[Boolean]]", "kind" : "abstract def"}, {"label" : "scriptLoad", "tail" : "(script: V): F[String]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.scriptLoad", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#scriptLoad(script:V):F[String]", "kind" : "abstract def"}, {"label" : "evalSha", "tail" : "(script: String, output: ScriptOutputType[V], keys: List[K], values: List[V]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.evalSha", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#evalSha(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V],keys:List[K],values:List[V]):F[output.R]", "kind" : "abstract def"}, {"label" : "evalSha", "tail" : "(script: String, output: ScriptOutputType[V], keys: List[K]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.evalSha", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#evalSha(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V],keys:List[K]):F[output.R]", "kind" : "abstract def"}, {"label" : "evalSha", "tail" : "(script: String, output: ScriptOutputType[V]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.evalSha", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#evalSha(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V]):F[output.R]", "kind" : "abstract def"}, {"label" : "eval", "tail" : "(script: String, output: ScriptOutputType[V], keys: List[K], values: List[V]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.eval", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#eval(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V],keys:List[K],values:List[V]):F[output.R]", "kind" : "abstract def"}, {"label" : "eval", "tail" : "(script: String, output: ScriptOutputType[V], keys: List[K]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.eval", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#eval(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V],keys:List[K]):F[output.R]", "kind" : "abstract def"}, {"label" : "eval", "tail" : "(script: String, output: ScriptOutputType[V]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.eval", "link" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html#eval(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V]):F[output.R]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/ScriptCommands.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.Scripting", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Scripting[F, K, V]) ⇒ Boolean, msg: ⇒ Any): Scripting[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Scripting[F, K, V]) ⇒ Boolean): Scripting[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Scripting[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Scripting[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Scripting[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Scripting[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "scriptFlush", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.scriptFlush", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#scriptFlush:F[Unit]", "kind" : "abstract def"}, {"label" : "scriptExists", "tail" : "(digests: String*): F[List[Boolean]]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.scriptExists", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#scriptExists(digests:String*):F[List[Boolean]]", "kind" : "abstract def"}, {"label" : "scriptLoad", "tail" : "(script: V): F[String]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.scriptLoad", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#scriptLoad(script:V):F[String]", "kind" : "abstract def"}, {"label" : "evalSha", "tail" : "(script: String, output: ScriptOutputType[V], keys: List[K], values: List[V]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.evalSha", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#evalSha(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V],keys:List[K],values:List[V]):F[output.R]", "kind" : "abstract def"}, {"label" : "evalSha", "tail" : "(script: String, output: ScriptOutputType[V], keys: List[K]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.evalSha", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#evalSha(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V],keys:List[K]):F[output.R]", "kind" : "abstract def"}, {"label" : "evalSha", "tail" : "(script: String, output: ScriptOutputType[V]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.evalSha", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#evalSha(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V]):F[output.R]", "kind" : "abstract def"}, {"label" : "eval", "tail" : "(script: String, output: ScriptOutputType[V], keys: List[K], values: List[V]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.eval", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#eval(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V],keys:List[K],values:List[V]):F[output.R]", "kind" : "abstract def"}, {"label" : "eval", "tail" : "(script: String, output: ScriptOutputType[V], keys: List[K]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.eval", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#eval(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V],keys:List[K]):F[output.R]", "kind" : "abstract def"}, {"label" : "eval", "tail" : "(script: String, output: ScriptOutputType[V]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.eval", "link" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html#eval(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V]):F[output.R]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/Scripting.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.ServerCommands", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ServerCommands[F, K]) ⇒ Boolean, msg: ⇒ Any): ServerCommands[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (ServerCommands[F, K]) ⇒ Boolean): ServerCommands[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): ServerCommands[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): ServerCommands[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (ServerCommands[F, K], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (ServerCommands[F, K], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "slowLogLen", "tail" : "(): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Diagnostic.slowLogLen", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#slowLogLen:F[Long]", "kind" : "abstract def"}, {"label" : "lastSave", "tail" : "(): F[Instant]", "member" : "dev.profunktor.redis4cats.algebra.Diagnostic.lastSave", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#lastSave:F[java.time.Instant]", "kind" : "abstract def"}, {"label" : "dbsize", "tail" : "(): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Diagnostic.dbsize", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#dbsize:F[Long]", "kind" : "abstract def"}, {"label" : "info", "tail" : "(): F[Map[String, String]]", "member" : "dev.profunktor.redis4cats.algebra.Diagnostic.info", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#info:F[Map[String,String]]", "kind" : "abstract def"}, {"label" : "flushAllAsync", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Flush.flushAllAsync", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#flushAllAsync:F[Unit]", "kind" : "abstract def"}, {"label" : "flushAll", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Flush.flushAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#flushAll:F[Unit]", "kind" : "abstract def"}, {"label" : "keys", "tail" : "(key: K): F[List[K]]", "member" : "dev.profunktor.redis4cats.algebra.Flush.keys", "link" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html#keys(key:K):F[List[K]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/ServerCommands.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.SetCommands", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SetCommands[F, K, V]) ⇒ Boolean, msg: ⇒ Any): SetCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SetCommands[F, K, V]) ⇒ Boolean): SetCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SetCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SetCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SetCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SetCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sIsMember", "tail" : "(key: K, value: V): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.SetCommands.sIsMember", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#sIsMember(key:K,value:V):F[Boolean]", "kind" : "abstract def"}, {"label" : "sRem", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetDeletion.sRem", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#sRem(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "sPop", "tail" : "(key: K, count: Long): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetDeletion.sPop", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#sPop(key:K,count:Long):F[Set[V]]", "kind" : "abstract def"}, {"label" : "sPop", "tail" : "(key: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetDeletion.sPop", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#sPop(key:K):F[Option[V]]", "kind" : "abstract def"}, {"label" : "sMove", "tail" : "(source: K, destination: K, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetSetter.sMove", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#sMove(source:K,destination:K,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "sInterStore", "tail" : "(destination: K, keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetSetter.sInterStore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#sInterStore(destination:K,keys:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "sDiffStore", "tail" : "(destination: K, keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetSetter.sDiffStore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#sDiffStore(destination:K,keys:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "sAdd", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetSetter.sAdd", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#sAdd(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "sUnionStore", "tail" : "(destination: K, keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sUnionStore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#sUnionStore(destination:K,keys:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "sUnion", "tail" : "(keys: K*): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sUnion", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#sUnion(keys:K*):F[Set[V]]", "kind" : "abstract def"}, {"label" : "sRandMember", "tail" : "(key: K, count: Long): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sRandMember", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#sRandMember(key:K,count:Long):F[List[V]]", "kind" : "abstract def"}, {"label" : "sRandMember", "tail" : "(key: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sRandMember", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#sRandMember(key:K):F[Option[V]]", "kind" : "abstract def"}, {"label" : "sMembers", "tail" : "(key: K): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sMembers", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#sMembers(key:K):F[Set[V]]", "kind" : "abstract def"}, {"label" : "sInter", "tail" : "(keys: K*): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sInter", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#sInter(keys:K*):F[Set[V]]", "kind" : "abstract def"}, {"label" : "sDiff", "tail" : "(keys: K*): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sDiff", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#sDiff(keys:K*):F[Set[V]]", "kind" : "abstract def"}, {"label" : "sCard", "tail" : "(key: K): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sCard", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html#sCard(key:K):F[Long]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/SetCommands.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.SetDeletion", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SetDeletion[F, K, V]) ⇒ Boolean, msg: ⇒ Any): SetDeletion[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SetDeletion[F, K, V]) ⇒ Boolean): SetDeletion[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SetDeletion[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SetDeletion[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SetDeletion[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SetDeletion[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sRem", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetDeletion.sRem", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#sRem(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "sPop", "tail" : "(key: K, count: Long): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetDeletion.sPop", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#sPop(key:K,count:Long):F[Set[V]]", "kind" : "abstract def"}, {"label" : "sPop", "tail" : "(key: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetDeletion.sPop", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html#sPop(key:K):F[Option[V]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/SetDeletion.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.SetGetter", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SetGetter[F, K, V]) ⇒ Boolean, msg: ⇒ Any): SetGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SetGetter[F, K, V]) ⇒ Boolean): SetGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SetGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SetGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SetGetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SetGetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sUnionStore", "tail" : "(destination: K, keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sUnionStore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#sUnionStore(destination:K,keys:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "sUnion", "tail" : "(keys: K*): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sUnion", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#sUnion(keys:K*):F[Set[V]]", "kind" : "abstract def"}, {"label" : "sRandMember", "tail" : "(key: K, count: Long): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sRandMember", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#sRandMember(key:K,count:Long):F[List[V]]", "kind" : "abstract def"}, {"label" : "sRandMember", "tail" : "(key: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sRandMember", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#sRandMember(key:K):F[Option[V]]", "kind" : "abstract def"}, {"label" : "sMembers", "tail" : "(key: K): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sMembers", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#sMembers(key:K):F[Set[V]]", "kind" : "abstract def"}, {"label" : "sInter", "tail" : "(keys: K*): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sInter", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#sInter(keys:K*):F[Set[V]]", "kind" : "abstract def"}, {"label" : "sDiff", "tail" : "(keys: K*): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sDiff", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#sDiff(keys:K*):F[Set[V]]", "kind" : "abstract def"}, {"label" : "sCard", "tail" : "(key: K): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sCard", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html#sCard(key:K):F[Long]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/SetGetter.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.SetSetter", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SetSetter[F, K, V]) ⇒ Boolean, msg: ⇒ Any): SetSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SetSetter[F, K, V]) ⇒ Boolean): SetSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SetSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SetSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SetSetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SetSetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sMove", "tail" : "(source: K, destination: K, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetSetter.sMove", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#sMove(source:K,destination:K,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "sInterStore", "tail" : "(destination: K, keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetSetter.sInterStore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#sInterStore(destination:K,keys:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "sDiffStore", "tail" : "(destination: K, keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetSetter.sDiffStore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#sDiffStore(destination:K,keys:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "sAdd", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetSetter.sAdd", "link" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html#sAdd(key:K,values:V*):F[Unit]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/SetSetter.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.Setter", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Setter[F, K, V]) ⇒ Boolean, msg: ⇒ Any): Setter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Setter[F, K, V]) ⇒ Boolean): Setter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Setter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Setter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Setter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Setter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "setRange", "tail" : "(key: K, value: V, offset: Long): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Setter.setRange", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#setRange(key:K,value:V,offset:Long):F[Unit]", "kind" : "abstract def"}, {"label" : "setEx", "tail" : "(key: K, value: V, expiresIn: FiniteDuration): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Setter.setEx", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#setEx(key:K,value:V,expiresIn:scala.concurrent.duration.FiniteDuration):F[Unit]", "kind" : "abstract def"}, {"label" : "setNx", "tail" : "(key: K, value: V): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.Setter.setNx", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#setNx(key:K,value:V):F[Boolean]", "kind" : "abstract def"}, {"label" : "set", "tail" : "(key: K, value: V, setArgs: SetArgs): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.Setter.set", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#set(key:K,value:V,setArgs:dev.profunktor.redis4cats.effects.SetArgs):F[Boolean]", "kind" : "abstract def"}, {"label" : "set", "tail" : "(key: K, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Setter.set", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#set(key:K,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "getSet", "tail" : "(key: K, value: V): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.Setter.getSet", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#getSet(key:K,value:V):F[Option[V]]", "kind" : "abstract def"}, {"label" : "append", "tail" : "(key: K, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Setter.append", "link" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html#append(key:K,value:V):F[Unit]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/Setter.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.SortedSetCommands", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SortedSetCommands[F, K, V]) ⇒ Boolean, msg: ⇒ Any): SortedSetCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SortedSetCommands[F, K, V]) ⇒ Boolean): SortedSetCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SortedSetCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SortedSetCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SortedSetCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SortedSetCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "zUnionStore", "tail" : "(destination: K, args: Option[ZStoreArgs], keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zUnionStore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zUnionStore(destination:K,args:Option[io.lettuce.core.ZStoreArgs],keys:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "zRemRangeByScore", "tail" : "(key: K, range: ZRange[V])(ev: Numeric[V]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zRemRangeByScore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zRemRangeByScore(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V])(implicitev:Numeric[V]):F[Unit]", "kind" : "abstract def"}, {"label" : "zRemRangeByRank", "tail" : "(key: K, start: Long, stop: Long): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zRemRangeByRank", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zRemRangeByRank(key:K,start:Long,stop:Long):F[Unit]", "kind" : "abstract def"}, {"label" : "zRemRangeByLex", "tail" : "(key: K, range: ZRange[V]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zRemRangeByLex", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zRemRangeByLex(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V]):F[Unit]", "kind" : "abstract def"}, {"label" : "zRem", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zRem", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zRem(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "zInterStore", "tail" : "(destination: K, args: Option[ZStoreArgs], keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zInterStore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zInterStore(destination:K,args:Option[io.lettuce.core.ZStoreArgs],keys:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "zIncrBy", "tail" : "(key: K, member: V, amount: Double): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zIncrBy", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zIncrBy(key:K,member:V,amount:Double):F[Unit]", "kind" : "abstract def"}, {"label" : "zAddIncr", "tail" : "(key: K, args: Option[ZAddArgs], value: ScoreWithValue[V]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zAddIncr", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zAddIncr(key:K,args:Option[io.lettuce.core.ZAddArgs],value:dev.profunktor.redis4cats.effects.ScoreWithValue[V]):F[Unit]", "kind" : "abstract def"}, {"label" : "zAdd", "tail" : "(key: K, args: Option[ZAddArgs], values: ScoreWithValue[V]*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zAdd", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zAdd(key:K,args:Option[io.lettuce.core.ZAddArgs],values:dev.profunktor.redis4cats.effects.ScoreWithValue[V]*):F[Unit]", "kind" : "abstract def"}, {"label" : "zScore", "tail" : "(key: K, value: V): F[Option[Double]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zScore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zScore(key:K,value:V):F[Option[Double]]", "kind" : "abstract def"}, {"label" : "zRevRank", "tail" : "(key: K, value: V): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRank", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zRevRank(key:K,value:V):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "zRevRangeWithScores", "tail" : "(key: K, start: Long, stop: Long): F[List[ScoreWithValue[V]]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRangeWithScores", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zRevRangeWithScores(key:K,start:Long,stop:Long):F[List[dev.profunktor.redis4cats.effects.ScoreWithValue[V]]]", "kind" : "abstract def"}, {"label" : "zRevRangeByScoreWithScores", "tail" : "(key: K, range: ZRange[T], limit: Option[RangeLimit])(arg0: Numeric[T]): F[List[ScoreWithValue[V]]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRangeByScoreWithScores", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zRevRangeByScoreWithScores[T](key:K,range:dev.profunktor.redis4cats.effects.ZRange[T],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit])(implicitevidence$4:Numeric[T]):F[List[dev.profunktor.redis4cats.effects.ScoreWithValue[V]]]", "kind" : "abstract def"}, {"label" : "zRevRangeByScore", "tail" : "(key: K, range: ZRange[T], limit: Option[RangeLimit])(arg0: Numeric[T]): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRangeByScore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zRevRangeByScore[T](key:K,range:dev.profunktor.redis4cats.effects.ZRange[T],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit])(implicitevidence$3:Numeric[T]):F[List[V]]", "kind" : "abstract def"}, {"label" : "zRevRangeByLex", "tail" : "(key: K, range: ZRange[V], limit: Option[RangeLimit]): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRangeByLex", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zRevRangeByLex(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit]):F[List[V]]", "kind" : "abstract def"}, {"label" : "zRevRange", "tail" : "(key: K, start: Long, stop: Long): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRange", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zRevRange(key:K,start:Long,stop:Long):F[List[V]]", "kind" : "abstract def"}, {"label" : "zRank", "tail" : "(key: K, value: V): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRank", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zRank(key:K,value:V):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "zRangeWithScores", "tail" : "(key: K, start: Long, stop: Long): F[List[ScoreWithValue[V]]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRangeWithScores", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zRangeWithScores(key:K,start:Long,stop:Long):F[List[dev.profunktor.redis4cats.effects.ScoreWithValue[V]]]", "kind" : "abstract def"}, {"label" : "zRangeByScoreWithScores", "tail" : "(key: K, range: ZRange[T], limit: Option[RangeLimit])(arg0: Numeric[T]): F[List[ScoreWithValue[V]]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRangeByScoreWithScores", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zRangeByScoreWithScores[T](key:K,range:dev.profunktor.redis4cats.effects.ZRange[T],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit])(implicitevidence$2:Numeric[T]):F[List[dev.profunktor.redis4cats.effects.ScoreWithValue[V]]]", "kind" : "abstract def"}, {"label" : "zRangeByScore", "tail" : "(key: K, range: ZRange[T], limit: Option[RangeLimit])(arg0: Numeric[T]): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRangeByScore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zRangeByScore[T](key:K,range:dev.profunktor.redis4cats.effects.ZRange[T],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit])(implicitevidence$1:Numeric[T]):F[List[V]]", "kind" : "abstract def"}, {"label" : "zRangeByLex", "tail" : "(key: K, range: ZRange[V], limit: Option[RangeLimit]): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRangeByLex", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zRangeByLex(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit]):F[List[V]]", "kind" : "abstract def"}, {"label" : "zRange", "tail" : "(key: K, start: Long, stop: Long): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRange", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zRange(key:K,start:Long,stop:Long):F[List[V]]", "kind" : "abstract def"}, {"label" : "zLexCount", "tail" : "(key: K, range: ZRange[V]): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zLexCount", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zLexCount(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V]):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "zCount", "tail" : "(key: K, range: ZRange[V])(ev: Numeric[V]): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zCount", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zCount(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V])(implicitev:Numeric[V]):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "zCard", "tail" : "(key: K): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zCard", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html#zCard(key:K):F[Option[Long]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetCommands.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.SortedSetGetter", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SortedSetGetter[F, K, V]) ⇒ Boolean, msg: ⇒ Any): SortedSetGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SortedSetGetter[F, K, V]) ⇒ Boolean): SortedSetGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SortedSetGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SortedSetGetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SortedSetGetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SortedSetGetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "zScore", "tail" : "(key: K, value: V): F[Option[Double]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zScore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#zScore(key:K,value:V):F[Option[Double]]", "kind" : "abstract def"}, {"label" : "zRevRank", "tail" : "(key: K, value: V): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRank", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#zRevRank(key:K,value:V):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "zRevRangeWithScores", "tail" : "(key: K, start: Long, stop: Long): F[List[ScoreWithValue[V]]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRangeWithScores", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#zRevRangeWithScores(key:K,start:Long,stop:Long):F[List[dev.profunktor.redis4cats.effects.ScoreWithValue[V]]]", "kind" : "abstract def"}, {"label" : "zRevRangeByScoreWithScores", "tail" : "(key: K, range: ZRange[T], limit: Option[RangeLimit])(arg0: Numeric[T]): F[List[ScoreWithValue[V]]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRangeByScoreWithScores", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#zRevRangeByScoreWithScores[T](key:K,range:dev.profunktor.redis4cats.effects.ZRange[T],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit])(implicitevidence$4:Numeric[T]):F[List[dev.profunktor.redis4cats.effects.ScoreWithValue[V]]]", "kind" : "abstract def"}, {"label" : "zRevRangeByScore", "tail" : "(key: K, range: ZRange[T], limit: Option[RangeLimit])(arg0: Numeric[T]): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRangeByScore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#zRevRangeByScore[T](key:K,range:dev.profunktor.redis4cats.effects.ZRange[T],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit])(implicitevidence$3:Numeric[T]):F[List[V]]", "kind" : "abstract def"}, {"label" : "zRevRangeByLex", "tail" : "(key: K, range: ZRange[V], limit: Option[RangeLimit]): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRangeByLex", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#zRevRangeByLex(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit]):F[List[V]]", "kind" : "abstract def"}, {"label" : "zRevRange", "tail" : "(key: K, start: Long, stop: Long): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRange", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#zRevRange(key:K,start:Long,stop:Long):F[List[V]]", "kind" : "abstract def"}, {"label" : "zRank", "tail" : "(key: K, value: V): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRank", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#zRank(key:K,value:V):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "zRangeWithScores", "tail" : "(key: K, start: Long, stop: Long): F[List[ScoreWithValue[V]]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRangeWithScores", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#zRangeWithScores(key:K,start:Long,stop:Long):F[List[dev.profunktor.redis4cats.effects.ScoreWithValue[V]]]", "kind" : "abstract def"}, {"label" : "zRangeByScoreWithScores", "tail" : "(key: K, range: ZRange[T], limit: Option[RangeLimit])(arg0: Numeric[T]): F[List[ScoreWithValue[V]]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRangeByScoreWithScores", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#zRangeByScoreWithScores[T](key:K,range:dev.profunktor.redis4cats.effects.ZRange[T],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit])(implicitevidence$2:Numeric[T]):F[List[dev.profunktor.redis4cats.effects.ScoreWithValue[V]]]", "kind" : "abstract def"}, {"label" : "zRangeByScore", "tail" : "(key: K, range: ZRange[T], limit: Option[RangeLimit])(arg0: Numeric[T]): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRangeByScore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#zRangeByScore[T](key:K,range:dev.profunktor.redis4cats.effects.ZRange[T],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit])(implicitevidence$1:Numeric[T]):F[List[V]]", "kind" : "abstract def"}, {"label" : "zRangeByLex", "tail" : "(key: K, range: ZRange[V], limit: Option[RangeLimit]): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRangeByLex", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#zRangeByLex(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit]):F[List[V]]", "kind" : "abstract def"}, {"label" : "zRange", "tail" : "(key: K, start: Long, stop: Long): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRange", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#zRange(key:K,start:Long,stop:Long):F[List[V]]", "kind" : "abstract def"}, {"label" : "zLexCount", "tail" : "(key: K, range: ZRange[V]): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zLexCount", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#zLexCount(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V]):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "zCount", "tail" : "(key: K, range: ZRange[V])(ev: Numeric[V]): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zCount", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#zCount(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V])(implicitev:Numeric[V]):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "zCard", "tail" : "(key: K): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zCard", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html#zCard(key:K):F[Option[Long]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetGetter.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.SortedSetSetter", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SortedSetSetter[F, K, V]) ⇒ Boolean, msg: ⇒ Any): SortedSetSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SortedSetSetter[F, K, V]) ⇒ Boolean): SortedSetSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SortedSetSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SortedSetSetter[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SortedSetSetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SortedSetSetter[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "zUnionStore", "tail" : "(destination: K, args: Option[ZStoreArgs], keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zUnionStore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#zUnionStore(destination:K,args:Option[io.lettuce.core.ZStoreArgs],keys:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "zRemRangeByScore", "tail" : "(key: K, range: ZRange[V])(ev: Numeric[V]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zRemRangeByScore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#zRemRangeByScore(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V])(implicitev:Numeric[V]):F[Unit]", "kind" : "abstract def"}, {"label" : "zRemRangeByRank", "tail" : "(key: K, start: Long, stop: Long): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zRemRangeByRank", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#zRemRangeByRank(key:K,start:Long,stop:Long):F[Unit]", "kind" : "abstract def"}, {"label" : "zRemRangeByLex", "tail" : "(key: K, range: ZRange[V]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zRemRangeByLex", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#zRemRangeByLex(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V]):F[Unit]", "kind" : "abstract def"}, {"label" : "zRem", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zRem", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#zRem(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "zInterStore", "tail" : "(destination: K, args: Option[ZStoreArgs], keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zInterStore", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#zInterStore(destination:K,args:Option[io.lettuce.core.ZStoreArgs],keys:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "zIncrBy", "tail" : "(key: K, member: V, amount: Double): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zIncrBy", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#zIncrBy(key:K,member:V,amount:Double):F[Unit]", "kind" : "abstract def"}, {"label" : "zAddIncr", "tail" : "(key: K, args: Option[ZAddArgs], value: ScoreWithValue[V]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zAddIncr", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#zAddIncr(key:K,args:Option[io.lettuce.core.ZAddArgs],value:dev.profunktor.redis4cats.effects.ScoreWithValue[V]):F[Unit]", "kind" : "abstract def"}, {"label" : "zAdd", "tail" : "(key: K, args: Option[ZAddArgs], values: ScoreWithValue[V]*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zAdd", "link" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html#zAdd(key:K,args:Option[io.lettuce.core.ZAddArgs],values:dev.profunktor.redis4cats.effects.ScoreWithValue[V]*):F[Unit]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/SortedSetSetter.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.StringCommands", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StringCommands[F, K, V]) ⇒ Boolean, msg: ⇒ Any): StringCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (StringCommands[F, K, V]) ⇒ Boolean): StringCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): StringCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): StringCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (StringCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (StringCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "bitOpXor", "tail" : "(destination: K, sources: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitOpXor", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#bitOpXor(destination:K,sources:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "bitOpOr", "tail" : "(destination: K, sources: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitOpOr", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#bitOpOr(destination:K,sources:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "bitOpNot", "tail" : "(destination: K, source: K): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitOpNot", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#bitOpNot(destination:K,source:K):F[Unit]", "kind" : "abstract def"}, {"label" : "bitOpAnd", "tail" : "(destination: K, sources: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitOpAnd", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#bitOpAnd(destination:K,sources:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "bitPos", "tail" : "(key: K, state: Boolean, start: Long, end: Long): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitPos", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#bitPos(key:K,state:Boolean,start:Long,end:Long):F[Long]", "kind" : "abstract def"}, {"label" : "bitPos", "tail" : "(key: K, state: Boolean, start: Long): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitPos", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#bitPos(key:K,state:Boolean,start:Long):F[Long]", "kind" : "abstract def"}, {"label" : "bitPos", "tail" : "(key: K, state: Boolean): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitPos", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#bitPos(key:K,state:Boolean):F[Long]", "kind" : "abstract def"}, {"label" : "bitCount", "tail" : "(key: K, start: Long, end: Long): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitCount", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#bitCount(key:K,start:Long,end:Long):F[Long]", "kind" : "abstract def"}, {"label" : "bitCount", "tail" : "(key: K): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitCount", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#bitCount(key:K):F[Long]", "kind" : "abstract def"}, {"label" : "incrByFloat", "tail" : "(key: K, amount: Double)(N: Numeric[V]): F[Double]", "member" : "dev.profunktor.redis4cats.algebra.Increment.incrByFloat", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#incrByFloat(key:K,amount:Double)(implicitN:Numeric[V]):F[Double]", "kind" : "abstract def"}, {"label" : "incrBy", "tail" : "(key: K, amount: Long)(N: Numeric[V]): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Increment.incrBy", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#incrBy(key:K,amount:Long)(implicitN:Numeric[V]):F[Long]", "kind" : "abstract def"}, {"label" : "incr", "tail" : "(key: K)(N: Numeric[V]): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Increment.incr", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#incr(key:K)(implicitN:Numeric[V]):F[Long]", "kind" : "abstract def"}, {"label" : "decrBy", "tail" : "(key: K, amount: Long)(N: Numeric[V]): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Decrement.decrBy", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#decrBy(key:K,amount:Long)(implicitN:Numeric[V]):F[Long]", "kind" : "abstract def"}, {"label" : "decr", "tail" : "(key: K)(N: Numeric[V]): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Decrement.decr", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#decr(key:K)(implicitN:Numeric[V]):F[Long]", "kind" : "abstract def"}, {"label" : "mSetNx", "tail" : "(keyValues: Map[K, V]): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.MultiKey.mSetNx", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#mSetNx(keyValues:Map[K,V]):F[Boolean]", "kind" : "abstract def"}, {"label" : "mSet", "tail" : "(keyValues: Map[K, V]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.MultiKey.mSet", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#mSet(keyValues:Map[K,V]):F[Unit]", "kind" : "abstract def"}, {"label" : "mGet", "tail" : "(keys: Set[K]): F[Map[K, V]]", "member" : "dev.profunktor.redis4cats.algebra.MultiKey.mGet", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#mGet(keys:Set[K]):F[Map[K,V]]", "kind" : "abstract def"}, {"label" : "setRange", "tail" : "(key: K, value: V, offset: Long): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Setter.setRange", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#setRange(key:K,value:V,offset:Long):F[Unit]", "kind" : "abstract def"}, {"label" : "setEx", "tail" : "(key: K, value: V, expiresIn: FiniteDuration): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Setter.setEx", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#setEx(key:K,value:V,expiresIn:scala.concurrent.duration.FiniteDuration):F[Unit]", "kind" : "abstract def"}, {"label" : "setNx", "tail" : "(key: K, value: V): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.Setter.setNx", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#setNx(key:K,value:V):F[Boolean]", "kind" : "abstract def"}, {"label" : "set", "tail" : "(key: K, value: V, setArgs: SetArgs): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.Setter.set", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#set(key:K,value:V,setArgs:dev.profunktor.redis4cats.effects.SetArgs):F[Boolean]", "kind" : "abstract def"}, {"label" : "set", "tail" : "(key: K, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Setter.set", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#set(key:K,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "getSet", "tail" : "(key: K, value: V): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.Setter.getSet", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#getSet(key:K,value:V):F[Option[V]]", "kind" : "abstract def"}, {"label" : "append", "tail" : "(key: K, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Setter.append", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#append(key:K,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "strLen", "tail" : "(key: K): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.Getter.strLen", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#strLen(key:K):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "getRange", "tail" : "(key: K, start: Long, end: Long): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.Getter.getRange", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#getRange(key:K,start:Long,end:Long):F[Option[V]]", "kind" : "abstract def"}, {"label" : "getBit", "tail" : "(key: K, offset: Long): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.Getter.getBit", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#getBit(key:K,offset:Long):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(key: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.Getter.get", "link" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html#get(key:K):F[Option[V]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/StringCommands.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.Transaction", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Transaction[F]) ⇒ Boolean, msg: ⇒ Any): Transaction[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Transaction[F]) ⇒ Boolean): Transaction[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Transaction[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Transaction[F]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Transaction[F], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Transaction[F], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "discard", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Transaction.discard", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#discard:F[Unit]", "kind" : "abstract def"}, {"label" : "exec", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Transaction.exec", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#exec:F[Unit]", "kind" : "abstract def"}, {"label" : "multi", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Transaction.multi", "link" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html#multi:F[Unit]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/Transaction.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.TransactionalCommands", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TransactionalCommands[F, K]) ⇒ Boolean, msg: ⇒ Any): TransactionalCommands[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (TransactionalCommands[F, K]) ⇒ Boolean): TransactionalCommands[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): TransactionalCommands[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): TransactionalCommands[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (TransactionalCommands[F, K], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (TransactionalCommands[F, K], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "unwatch", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Watcher.unwatch", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#unwatch:F[Unit]", "kind" : "abstract def"}, {"label" : "watch", "tail" : "(keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Watcher.watch", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#watch(keys:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "discard", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Transaction.discard", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#discard:F[Unit]", "kind" : "abstract def"}, {"label" : "exec", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Transaction.exec", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#exec:F[Unit]", "kind" : "abstract def"}, {"label" : "multi", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Transaction.multi", "link" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html#multi:F[Unit]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/TransactionalCommands.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.algebra.Watcher", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Watcher[F, K]) ⇒ Boolean, msg: ⇒ Any): Watcher[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Watcher[F, K]) ⇒ Boolean): Watcher[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Watcher[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Watcher[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Watcher[F, K], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Watcher[F, K], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "unwatch", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Watcher.unwatch", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#unwatch:F[Unit]", "kind" : "abstract def"}, {"label" : "watch", "tail" : "(keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Watcher.watch", "link" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html#watch(keys:K*):F[Unit]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/algebra\/Watcher.html", "kind" : "trait"}], "dev.profunktor.redis4cats.streams" : [{"name" : "dev.profunktor.redis4cats.streams.data", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/streams\/data$.html", "members_object" : [{"label" : "StreamingOffset", "tail" : "", "member" : "dev.profunktor.redis4cats.streams.data.StreamingOffset", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#StreamingOffset", "kind" : "object"}, {"label" : "StreamingOffset", "tail" : "", "member" : "dev.profunktor.redis4cats.streams.data.StreamingOffset", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#StreamingOffset[K]extendsProductwithSerializable", "kind" : "sealed trait"}, {"label" : "MessageId", "tail" : "", "member" : "dev.profunktor.redis4cats.streams.data.MessageId", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#MessageIdextendsAnyValwithProductwithSerializable", "kind" : "final case class"}, {"label" : "StreamingMessageWithId", "tail" : "", "member" : "dev.profunktor.redis4cats.streams.data.StreamingMessageWithId", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#StreamingMessageWithId[K,V]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "StreamingMessage", "tail" : "", "member" : "dev.profunktor.redis4cats.streams.data.StreamingMessage", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#StreamingMessage[K,V]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/streams\/data$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dev.profunktor.redis4cats.streams.RawStreaming", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RawStreaming[F, K, V]) ⇒ Boolean, msg: ⇒ Any): RawStreaming[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RawStreaming[F, K, V]) ⇒ Boolean): RawStreaming[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): RawStreaming[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): RawStreaming[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (RawStreaming[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (RawStreaming[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "xRead", "tail" : "(streams: Set[StreamingOffset[K]]): F[List[StreamingMessageWithId[K, V]]]", "member" : "dev.profunktor.redis4cats.streams.RawStreaming.xRead", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#xRead(streams:Set[dev.profunktor.redis4cats.streams.data.StreamingOffset[K]]):F[List[dev.profunktor.redis4cats.streams.data.StreamingMessageWithId[K,V]]]", "kind" : "abstract def"}, {"label" : "xAdd", "tail" : "(key: K, body: Map[K, V]): F[MessageId]", "member" : "dev.profunktor.redis4cats.streams.RawStreaming.xAdd", "link" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html#xAdd(key:K,body:Map[K,V]):F[dev.profunktor.redis4cats.streams.data.MessageId]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/streams\/RawStreaming.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.streams.RedisStream", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RedisStream[F, K, V]) ⇒ Boolean, msg: ⇒ Any): RedisStream[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RedisStream[F, K, V]) ⇒ Boolean): RedisStream[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): RedisStream[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): RedisStream[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (RedisStream[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (RedisStream[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "read", "tail" : "(keys: Set[K], initialOffset: (K) ⇒ StreamingOffset[K]): Stream[F, StreamingMessageWithId[K, V]]", "member" : "dev.profunktor.redis4cats.streams.RedisStream.read", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#read(keys:Set[K],initialOffset:K=>dev.profunktor.redis4cats.streams.data.StreamingOffset[K]):fs2.Stream[F,dev.profunktor.redis4cats.streams.data.StreamingMessageWithId[K,V]]", "kind" : "def"}, {"label" : "append", "tail" : "(): (Stream[F, StreamingMessage[K, V]]) ⇒ Stream[F, Unit]", "member" : "dev.profunktor.redis4cats.streams.RedisStream.append", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#append:fs2.Stream[F,dev.profunktor.redis4cats.streams.data.StreamingMessage[K,V]]=>fs2.Stream[F,Unit]", "kind" : "def"}, {"label" : "E$F$RedisStream", "tail" : "", "member" : "dev.profunktor.redis4cats.streams.RedisStream.E$F$RedisStream", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#E$F$RedisStreamextendsAnyRef", "kind" : "abstract class"}, {"member" : "dev.profunktor.redis4cats.streams.RedisStream#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "mkMasterReplicaConnection", "tail" : "(codec: RedisCodec[K, V], uris: RedisURI*)(readFrom: Option[ReadFrom])(arg0: Concurrent[F], arg1: ContextShift[F], arg2: Log[F]): Stream[F, Streaming[[β$1$]Stream[F, β$1$], K, V]]", "member" : "dev.profunktor.redis4cats.streams.RedisStream.mkMasterReplicaConnection", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#mkMasterReplicaConnection[F[_],K,V](codec:dev.profunktor.redis4cats.data.RedisCodec[K,V],uris:dev.profunktor.redis4cats.connection.RedisURI*)(readFrom:Option[io.lettuce.core.ReadFrom])(implicitevidence$4:cats.effect.Concurrent[F],implicitevidence$5:cats.effect.ContextShift[F],implicitevidence$6:dev.profunktor.redis4cats.effect.Log[F]):fs2.Stream[F,dev.profunktor.redis4cats.streams.Streaming[[β$1$]fs2.Stream[F,β$1$],K,V]]", "kind" : "def"}, {"label" : "mkStreamingConnection", "tail" : "(client: RedisClient, codec: RedisCodec[K, V])(arg0: Concurrent[F], arg1: ContextShift[F], arg2: Log[F]): Stream[F, Streaming[[β$0$]Stream[F, β$0$], K, V]]", "member" : "dev.profunktor.redis4cats.streams.RedisStream.mkStreamingConnection", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#mkStreamingConnection[F[_],K,V](client:dev.profunktor.redis4cats.connection.RedisClient,codec:dev.profunktor.redis4cats.data.RedisCodec[K,V])(implicitevidence$1:cats.effect.Concurrent[F],implicitevidence$2:cats.effect.ContextShift[F],implicitevidence$3:dev.profunktor.redis4cats.effect.Log[F]):fs2.Stream[F,dev.profunktor.redis4cats.streams.Streaming[[β$0$]fs2.Stream[F,β$0$],K,V]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/streams\/RedisStream$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "dev\/profunktor\/redis4cats\/streams\/RedisStream.html", "kind" : "class"}, {"name" : "dev.profunktor.redis4cats.streams.Streaming", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Streaming[F, K, V]) ⇒ Boolean, msg: ⇒ Any): Streaming[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Streaming[F, K, V]) ⇒ Boolean): Streaming[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Streaming[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Streaming[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Streaming[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Streaming[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "read", "tail" : "(keys: Set[K], initialOffset: (K) ⇒ StreamingOffset[K]): F[StreamingMessageWithId[K, V]]", "member" : "dev.profunktor.redis4cats.streams.Streaming.read", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#read(keys:Set[K],initialOffset:K=>dev.profunktor.redis4cats.streams.data.StreamingOffset[K]):F[dev.profunktor.redis4cats.streams.data.StreamingMessageWithId[K,V]]", "kind" : "abstract def"}, {"label" : "append", "tail" : "(): (F[StreamingMessage[K, V]]) ⇒ F[Unit]", "member" : "dev.profunktor.redis4cats.streams.Streaming.append", "link" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html#append:F[dev.profunktor.redis4cats.streams.data.StreamingMessage[K,V]]=>F[Unit]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/streams\/Streaming.html", "kind" : "trait"}], "dev" : [], "dev.profunktor.redis4cats.codecs" : [{"name" : "dev.profunktor.redis4cats.codecs.Codecs", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html", "members_object" : [{"label" : "derive", "tail" : "(baseCodec: RedisCodec[K1, V1], epiKeys: SplitEpi[K1, K2], epiValues: SplitEpi[V1, V2]): RedisCodec[K2, V2]", "member" : "dev.profunktor.redis4cats.codecs.Codecs.derive", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#derive[K1,K2,V1,V2](baseCodec:dev.profunktor.redis4cats.data.RedisCodec[K1,V1],epiKeys:dev.profunktor.redis4cats.codecs.splits.SplitEpi[K1,K2],epiValues:dev.profunktor.redis4cats.codecs.splits.SplitEpi[V1,V2]):dev.profunktor.redis4cats.data.RedisCodec[K2,V2]", "kind" : "def"}, {"label" : "derive", "tail" : "(baseCodec: RedisCodec[K, V1], epi: SplitEpi[V1, V2]): RedisCodec[K, V2]", "member" : "dev.profunktor.redis4cats.codecs.Codecs.derive", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#derive[K,V1,V2](baseCodec:dev.profunktor.redis4cats.data.RedisCodec[K,V1],epi:dev.profunktor.redis4cats.codecs.splits.SplitEpi[V1,V2]):dev.profunktor.redis4cats.data.RedisCodec[K,V2]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/codecs\/Codecs$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "dev.profunktor.redis4cats.connection" : [{"name" : "dev.profunktor.redis4cats.connection.OperationNotSupported", "shortDescription" : "", "members_case class" : [{"label" : "getStackTraceString", "tail" : "(): String", "member" : "scala.Predef.RichException.getStackTraceString", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#getStackTraceString:String", "kind" : "def"}, {"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (OperationNotSupported) ⇒ Boolean, msg: ⇒ Any): OperationNotSupported", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (OperationNotSupported) ⇒ Boolean): OperationNotSupported", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): OperationNotSupported", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): OperationNotSupported", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (OperationNotSupported, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (OperationNotSupported, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "dev.profunktor.redis4cats.connection.OperationNotSupported.toString", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#toString():String", "kind" : "def"}, {"member" : "dev.profunktor.redis4cats.connection.OperationNotSupported#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": String", "member" : "dev.profunktor.redis4cats.connection.OperationNotSupported.value", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#value:String", "kind" : "val"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "scala.util.control.NoStackTrace.fillInStackTrace", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "dev\/profunktor\/redis4cats\/connection\/OperationNotSupported.html", "kind" : "case class"}, {"name" : "dev.profunktor.redis4cats.connection.RedisClient", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html", "members_object" : [{"label" : "fromUnderlyingWithUri", "tail" : "(underlying: io.lettuce.core.RedisClient, uri: RedisURI): RedisClient", "member" : "dev.profunktor.redis4cats.connection.RedisClient.fromUnderlyingWithUri", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#fromUnderlyingWithUri(underlying:io.lettuce.core.RedisClient,uri:dev.profunktor.redis4cats.connection.RedisURI):dev.profunktor.redis4cats.connection.RedisClient", "kind" : "def"}, {"label" : "apply", "tail" : "(uri: ⇒ RedisURI, opts: ClientOptions)(arg0: Concurrent[F], arg1: ContextShift[F], arg2: Log[F]): Resource[F, RedisClient]", "member" : "dev.profunktor.redis4cats.connection.RedisClient.apply", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#apply[F[_]](uri:=>dev.profunktor.redis4cats.connection.RedisURI,opts:io.lettuce.core.ClientOptions)(implicitevidence$10:cats.effect.Concurrent[F],implicitevidence$11:cats.effect.ContextShift[F],implicitevidence$12:dev.profunktor.redis4cats.effect.Log[F]):cats.effect.Resource[F,dev.profunktor.redis4cats.connection.RedisClient]", "kind" : "def"}, {"label" : "apply", "tail" : "(uri: ⇒ RedisURI)(arg0: Concurrent[F], arg1: ContextShift[F], arg2: Log[F]): Resource[F, RedisClient]", "member" : "dev.profunktor.redis4cats.connection.RedisClient.apply", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#apply[F[_]](uri:=>dev.profunktor.redis4cats.connection.RedisURI)(implicitevidence$7:cats.effect.Concurrent[F],implicitevidence$8:cats.effect.ContextShift[F],implicitevidence$9:dev.profunktor.redis4cats.effect.Log[F]):cats.effect.Resource[F,dev.profunktor.redis4cats.connection.RedisClient]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RedisClient) ⇒ Boolean, msg: ⇒ Any): RedisClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RedisClient) ⇒ Boolean): RedisClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): RedisClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): RedisClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (RedisClient, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (RedisClient, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "uri", "tail" : ": RedisURI", "member" : "dev.profunktor.redis4cats.connection.RedisClient.uri", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#uri:dev.profunktor.redis4cats.connection.RedisURI", "kind" : "val"}, {"label" : "underlying", "tail" : ": io.lettuce.core.RedisClient", "member" : "dev.profunktor.redis4cats.connection.RedisClient.underlying", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#underlying:io.lettuce.core.RedisClient", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "dev\/profunktor\/redis4cats\/connection\/RedisClient.html", "kind" : "case class"}, {"name" : "dev.profunktor.redis4cats.connection.RedisClusterClient", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html", "members_object" : [{"label" : "partitions", "tail" : "(client: RedisClusterClient)(arg0: Sync[F]): F[Partitions]", "member" : "dev.profunktor.redis4cats.connection.RedisClusterClient.partitions", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#partitions[F[_]](client:dev.profunktor.redis4cats.connection.RedisClusterClient)(implicitevidence$9:cats.effect.Sync[F]):F[io.lettuce.core.cluster.models.partitions.Partitions]", "kind" : "def"}, {"label" : "nodeId", "tail" : "(client: RedisClusterClient, keyName: String)(arg0: Sync[F]): F[NodeId]", "member" : "dev.profunktor.redis4cats.connection.RedisClusterClient.nodeId", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#nodeId[F[_]](client:dev.profunktor.redis4cats.connection.RedisClusterClient,keyName:String)(implicitevidence$8:cats.effect.Sync[F]):F[dev.profunktor.redis4cats.data.NodeId]", "kind" : "def"}, {"label" : "fromUnderlying", "tail" : "(underlying: io.lettuce.core.cluster.RedisClusterClient): RedisClusterClient", "member" : "dev.profunktor.redis4cats.connection.RedisClusterClient.fromUnderlying", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#fromUnderlying(underlying:io.lettuce.core.cluster.RedisClusterClient):dev.profunktor.redis4cats.connection.RedisClusterClient", "kind" : "def"}, {"label" : "apply", "tail" : "(uri: RedisURI*)(arg0: Concurrent[F], arg1: ContextShift[F], arg2: Log[F]): Resource[F, RedisClusterClient]", "member" : "dev.profunktor.redis4cats.connection.RedisClusterClient.apply", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#apply[F[_]](uri:dev.profunktor.redis4cats.connection.RedisURI*)(implicitevidence$5:cats.effect.Concurrent[F],implicitevidence$6:cats.effect.ContextShift[F],implicitevidence$7:dev.profunktor.redis4cats.effect.Log[F]):cats.effect.Resource[F,dev.profunktor.redis4cats.connection.RedisClusterClient]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RedisClusterClient) ⇒ Boolean, msg: ⇒ Any): RedisClusterClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RedisClusterClient) ⇒ Boolean): RedisClusterClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): RedisClusterClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): RedisClusterClient", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (RedisClusterClient, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (RedisClusterClient, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "underlying", "tail" : ": io.lettuce.core.cluster.RedisClusterClient", "member" : "dev.profunktor.redis4cats.connection.RedisClusterClient.underlying", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#underlying:io.lettuce.core.cluster.RedisClusterClient", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "dev\/profunktor\/redis4cats\/connection\/RedisClusterClient.html", "kind" : "case class"}, {"name" : "dev.profunktor.redis4cats.connection.RedisMasterReplica", "shortDescription" : "It encapsulates an underlying MasterReplica connection", "object" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html", "members_object" : [{"label" : "fromUnderlying", "tail" : "(underlying: StatefulRedisMasterReplicaConnection[K, V]): RedisMasterReplica[K, V]", "member" : "dev.profunktor.redis4cats.connection.RedisMasterReplica.fromUnderlying", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#fromUnderlying[K,V](underlying:io.lettuce.core.masterreplica.StatefulRedisMasterReplicaConnection[K,V]):dev.profunktor.redis4cats.connection.RedisMasterReplica[K,V]", "kind" : "def"}, {"label" : "apply", "tail" : "(arg0: Concurrent[F], arg1: ContextShift[F], arg2: Log[F]): MasterReplicaPartiallyApplied[F]", "member" : "dev.profunktor.redis4cats.connection.RedisMasterReplica.apply", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#apply[F[_]](implicitevidence$7:cats.effect.Concurrent[F],implicitevidence$8:cats.effect.ContextShift[F],implicitevidence$9:dev.profunktor.redis4cats.effect.Log[F]):dev.profunktor.redis4cats.connection.RedisMasterReplica.MasterReplicaPartiallyApplied[F]", "kind" : "def"}, {"label" : "MasterReplicaPartiallyApplied", "tail" : "", "member" : "dev.profunktor.redis4cats.connection.RedisMasterReplica.MasterReplicaPartiallyApplied", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#MasterReplicaPartiallyApplied[F[_]]extendsAnyRef", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RedisMasterReplica[K, V]) ⇒ Boolean, msg: ⇒ Any): RedisMasterReplica[K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RedisMasterReplica[K, V]) ⇒ Boolean): RedisMasterReplica[K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): RedisMasterReplica[K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): RedisMasterReplica[K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (RedisMasterReplica[K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (RedisMasterReplica[K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "underlying", "tail" : ": StatefulRedisMasterReplicaConnection[K, V]", "member" : "dev.profunktor.redis4cats.connection.RedisMasterReplica.underlying", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#underlying:io.lettuce.core.masterreplica.StatefulRedisMasterReplicaConnection[K,V]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "dev\/profunktor\/redis4cats\/connection\/RedisMasterReplica.html", "kind" : "case class"}, {"name" : "dev.profunktor.redis4cats.connection.RedisURI", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html", "members_object" : [{"label" : "fromUnderlying", "tail" : "(j: io.lettuce.core.RedisURI): RedisURI", "member" : "dev.profunktor.redis4cats.connection.RedisURI.fromUnderlying", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#fromUnderlying(j:io.lettuce.core.RedisURI):dev.profunktor.redis4cats.connection.RedisURI", "kind" : "def"}, {"label" : "make", "tail" : "(uri: ⇒ String)(arg0: ApplicativeError[F, Throwable]): F[RedisURI]", "member" : "dev.profunktor.redis4cats.connection.RedisURI.make", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#make[F[_]](uri:=>String)(implicitevidence$1:cats.ApplicativeError[F,Throwable]):F[dev.profunktor.redis4cats.connection.RedisURI]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RedisURI) ⇒ Boolean, msg: ⇒ Any): RedisURI", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RedisURI) ⇒ Boolean): RedisURI", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): RedisURI", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): RedisURI", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (RedisURI, B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (RedisURI, B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "underlying", "tail" : ": io.lettuce.core.RedisURI", "member" : "dev.profunktor.redis4cats.connection.RedisURI.underlying", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#underlying:io.lettuce.core.RedisURI", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "dev\/profunktor\/redis4cats\/connection\/RedisURI.html", "kind" : "case class"}], "dev.profunktor.redis4cats.pubsub" : [{"name" : "dev.profunktor.redis4cats.pubsub.data", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html", "members_object" : [{"label" : "Subscription", "tail" : "", "member" : "dev.profunktor.redis4cats.pubsub.data.Subscription", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#Subscription", "kind" : "object"}, {"label" : "Subscription", "tail" : "", "member" : "dev.profunktor.redis4cats.pubsub.data.Subscription", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#Subscription[K]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "LivePubSubCommands", "tail" : "", "member" : "dev.profunktor.redis4cats.pubsub.data.LivePubSubCommands", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#LivePubSubCommands[K,V]extendsdata.RedisPubSubCommands[K,V]withProductwithSerializable", "kind" : "case class"}, {"label" : "RedisPubSubCommands", "tail" : "", "member" : "dev.profunktor.redis4cats.pubsub.data.RedisPubSubCommands", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#RedisPubSubCommands[K,V]extendsAnyRef", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/data$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dev.profunktor.redis4cats.pubsub.LivePubSubCommands", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (LivePubSubCommands[F, K, V]) ⇒ Boolean, msg: ⇒ Any): LivePubSubCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (LivePubSubCommands[F, K, V]) ⇒ Boolean): LivePubSubCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): LivePubSubCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): LivePubSubCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (LivePubSubCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (LivePubSubCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "pubSubSubscriptions", "tail" : "(channels: List[RedisChannel[K]]): Stream[F, List[Subscription[K]]]", "member" : "dev.profunktor.redis4cats.pubsub.LivePubSubCommands.pubSubSubscriptions", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#pubSubSubscriptions(channels:List[dev.profunktor.redis4cats.data.RedisChannel[K]]):fs2.Stream[F,List[dev.profunktor.redis4cats.pubsub.data.Subscription[K]]]", "kind" : "def"}, {"label" : "pubSubSubscriptions", "tail" : "(channel: RedisChannel[K]): Stream[F, Subscription[K]]", "member" : "dev.profunktor.redis4cats.pubsub.LivePubSubCommands.pubSubSubscriptions", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#pubSubSubscriptions(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):fs2.Stream[F,dev.profunktor.redis4cats.pubsub.data.Subscription[K]]", "kind" : "def"}, {"label" : "pubSubChannels", "tail" : "(): Stream[F, List[K]]", "member" : "dev.profunktor.redis4cats.pubsub.LivePubSubCommands.pubSubChannels", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#pubSubChannels:fs2.Stream[F,List[K]]", "kind" : "def"}, {"label" : "publish", "tail" : "(channel: RedisChannel[K]): (Stream[F, V]) ⇒ Stream[F, Unit]", "member" : "dev.profunktor.redis4cats.pubsub.LivePubSubCommands.publish", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#publish(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):fs2.Stream[F,V]=>fs2.Stream[F,Unit]", "kind" : "def"}, {"label" : "unsubscribe", "tail" : "(channel: RedisChannel[K]): Stream[F, Unit]", "member" : "dev.profunktor.redis4cats.pubsub.LivePubSubCommands.unsubscribe", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#unsubscribe(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):fs2.Stream[F,Unit]", "kind" : "def"}, {"label" : "subscribe", "tail" : "(channel: RedisChannel[K]): Stream[F, V]", "member" : "dev.profunktor.redis4cats.pubsub.LivePubSubCommands.subscribe", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#subscribe(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):fs2.Stream[F,V]", "kind" : "def"}, {"label" : "E$F$LivePubSubCommands", "tail" : "", "member" : "dev.profunktor.redis4cats.pubsub.LivePubSubCommands.E$F$LivePubSubCommands", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#E$F$LivePubSubCommandsextendsAnyRef", "kind" : "abstract class"}, {"member" : "dev.profunktor.redis4cats.pubsub.LivePubSubCommands#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubCommands.html", "kind" : "class"}, {"name" : "dev.profunktor.redis4cats.pubsub.LivePubSubStats", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (LivePubSubStats[F, K, V]) ⇒ Boolean, msg: ⇒ Any): LivePubSubStats[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (LivePubSubStats[F, K, V]) ⇒ Boolean): LivePubSubStats[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): LivePubSubStats[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): LivePubSubStats[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (LivePubSubStats[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (LivePubSubStats[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "pubSubSubscriptions", "tail" : "(channels: List[RedisChannel[K]]): Stream[F, List[Subscription[K]]]", "member" : "dev.profunktor.redis4cats.pubsub.LivePubSubStats.pubSubSubscriptions", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#pubSubSubscriptions(channels:List[dev.profunktor.redis4cats.data.RedisChannel[K]]):fs2.Stream[F,List[dev.profunktor.redis4cats.pubsub.data.Subscription[K]]]", "kind" : "def"}, {"label" : "pubSubSubscriptions", "tail" : "(channel: RedisChannel[K]): Stream[F, Subscription[K]]", "member" : "dev.profunktor.redis4cats.pubsub.LivePubSubStats.pubSubSubscriptions", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#pubSubSubscriptions(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):fs2.Stream[F,dev.profunktor.redis4cats.pubsub.data.Subscription[K]]", "kind" : "def"}, {"label" : "pubSubChannels", "tail" : "(): Stream[F, List[K]]", "member" : "dev.profunktor.redis4cats.pubsub.LivePubSubStats.pubSubChannels", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#pubSubChannels:fs2.Stream[F,List[K]]", "kind" : "def"}, {"label" : "E$F$LivePubSubStats", "tail" : "", "member" : "dev.profunktor.redis4cats.pubsub.LivePubSubStats.E$F$LivePubSubStats", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#E$F$LivePubSubStatsextendsAnyRef", "kind" : "abstract class"}, {"member" : "dev.profunktor.redis4cats.pubsub.LivePubSubStats#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "dev\/profunktor\/redis4cats\/pubsub\/LivePubSubStats.html", "kind" : "class"}, {"name" : "dev.profunktor.redis4cats.pubsub.PublishCommands", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PublishCommands[F, K, V]) ⇒ Boolean, msg: ⇒ Any): PublishCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PublishCommands[F, K, V]) ⇒ Boolean): PublishCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PublishCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PublishCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PublishCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PublishCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "publish", "tail" : "(channel: RedisChannel[K]): (F[V]) ⇒ F[Unit]", "member" : "dev.profunktor.redis4cats.pubsub.PublishCommands.publish", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#publish(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):F[V]=>F[Unit]", "kind" : "abstract def"}, {"label" : "pubSubSubscriptions", "tail" : "(channels: List[RedisChannel[K]]): F[List[Subscription[K]]]", "member" : "dev.profunktor.redis4cats.pubsub.PubSubStats.pubSubSubscriptions", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#pubSubSubscriptions(channels:List[dev.profunktor.redis4cats.data.RedisChannel[K]]):F[List[dev.profunktor.redis4cats.pubsub.data.Subscription[K]]]", "kind" : "abstract def"}, {"label" : "pubSubSubscriptions", "tail" : "(channel: RedisChannel[K]): F[Subscription[K]]", "member" : "dev.profunktor.redis4cats.pubsub.PubSubStats.pubSubSubscriptions", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#pubSubSubscriptions(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):F[dev.profunktor.redis4cats.pubsub.data.Subscription[K]]", "kind" : "abstract def"}, {"label" : "pubSubChannels", "tail" : "(): F[List[K]]", "member" : "dev.profunktor.redis4cats.pubsub.PubSubStats.pubSubChannels", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html#pubSubChannels:F[List[K]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/pubsub\/PublishCommands.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.pubsub.Publisher", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Publisher[F, K, V]) ⇒ Boolean, msg: ⇒ Any): Publisher[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Publisher[F, K, V]) ⇒ Boolean): Publisher[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Publisher[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Publisher[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Publisher[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Publisher[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "pubSubSubscriptions", "tail" : "(channels: List[RedisChannel[K]]): Stream[F, List[Subscription[K]]]", "member" : "dev.profunktor.redis4cats.pubsub.Publisher.pubSubSubscriptions", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#pubSubSubscriptions(channels:List[dev.profunktor.redis4cats.data.RedisChannel[K]]):fs2.Stream[F,List[dev.profunktor.redis4cats.pubsub.data.Subscription[K]]]", "kind" : "def"}, {"label" : "pubSubSubscriptions", "tail" : "(channel: RedisChannel[K]): Stream[F, Subscription[K]]", "member" : "dev.profunktor.redis4cats.pubsub.Publisher.pubSubSubscriptions", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#pubSubSubscriptions(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):fs2.Stream[F,dev.profunktor.redis4cats.pubsub.data.Subscription[K]]", "kind" : "def"}, {"label" : "pubSubChannels", "tail" : "(): Stream[F, List[K]]", "member" : "dev.profunktor.redis4cats.pubsub.Publisher.pubSubChannels", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#pubSubChannels:fs2.Stream[F,List[K]]", "kind" : "def"}, {"label" : "publish", "tail" : "(channel: RedisChannel[K]): (Stream[F, V]) ⇒ Stream[F, Unit]", "member" : "dev.profunktor.redis4cats.pubsub.Publisher.publish", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#publish(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):fs2.Stream[F,V]=>fs2.Stream[F,Unit]", "kind" : "def"}, {"label" : "E$F$Publisher", "tail" : "", "member" : "dev.profunktor.redis4cats.pubsub.Publisher.E$F$Publisher", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#E$F$PublisherextendsAnyRef", "kind" : "abstract class"}, {"member" : "dev.profunktor.redis4cats.pubsub.Publisher#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "dev\/profunktor\/redis4cats\/pubsub\/Publisher.html", "kind" : "class"}, {"name" : "dev.profunktor.redis4cats.pubsub.PubSub", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html", "members_object" : [{"label" : "mkSubscriberConnection", "tail" : "(client: RedisClient, codec: RedisCodec[K, V])(arg0: ConcurrentEffect[F], arg1: ContextShift[F], arg2: Log[F]): Stream[F, SubscribeCommands[[β$2$]Stream[F, β$2$], K, V]]", "member" : "dev.profunktor.redis4cats.pubsub.PubSub.mkSubscriberConnection", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#mkSubscriberConnection[F[_],K,V](client:dev.profunktor.redis4cats.connection.RedisClient,codec:dev.profunktor.redis4cats.data.RedisCodec[K,V])(implicitevidence$10:cats.effect.ConcurrentEffect[F],implicitevidence$11:cats.effect.ContextShift[F],implicitevidence$12:dev.profunktor.redis4cats.effect.Log[F]):fs2.Stream[F,dev.profunktor.redis4cats.pubsub.SubscribeCommands[[β$2$]fs2.Stream[F,β$2$],K,V]]", "kind" : "def"}, {"label" : "mkPublisherConnection", "tail" : "(client: RedisClient, codec: RedisCodec[K, V])(arg0: ConcurrentEffect[F], arg1: ContextShift[F], arg2: Log[F]): Stream[F, PublishCommands[[β$1$]Stream[F, β$1$], K, V]]", "member" : "dev.profunktor.redis4cats.pubsub.PubSub.mkPublisherConnection", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#mkPublisherConnection[F[_],K,V](client:dev.profunktor.redis4cats.connection.RedisClient,codec:dev.profunktor.redis4cats.data.RedisCodec[K,V])(implicitevidence$7:cats.effect.ConcurrentEffect[F],implicitevidence$8:cats.effect.ContextShift[F],implicitevidence$9:dev.profunktor.redis4cats.effect.Log[F]):fs2.Stream[F,dev.profunktor.redis4cats.pubsub.PublishCommands[[β$1$]fs2.Stream[F,β$1$],K,V]]", "kind" : "def"}, {"label" : "mkPubSubConnection", "tail" : "(client: RedisClient, codec: RedisCodec[K, V])(arg0: ConcurrentEffect[F], arg1: ContextShift[F], arg2: Log[F]): Stream[F, PubSubCommands[[β$0$]Stream[F, β$0$], K, V]]", "member" : "dev.profunktor.redis4cats.pubsub.PubSub.mkPubSubConnection", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#mkPubSubConnection[F[_],K,V](client:dev.profunktor.redis4cats.connection.RedisClient,codec:dev.profunktor.redis4cats.data.RedisCodec[K,V])(implicitevidence$4:cats.effect.ConcurrentEffect[F],implicitevidence$5:cats.effect.ContextShift[F],implicitevidence$6:dev.profunktor.redis4cats.effect.Log[F]):fs2.Stream[F,dev.profunktor.redis4cats.pubsub.PubSubCommands[[β$0$]fs2.Stream[F,β$0$],K,V]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSub$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dev.profunktor.redis4cats.pubsub.PubSubCommands", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PubSubCommands[F, K, V]) ⇒ Boolean, msg: ⇒ Any): PubSubCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PubSubCommands[F, K, V]) ⇒ Boolean): PubSubCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PubSubCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PubSubCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PubSubCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PubSubCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "unsubscribe", "tail" : "(channel: RedisChannel[K]): F[Unit]", "member" : "dev.profunktor.redis4cats.pubsub.SubscribeCommands.unsubscribe", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#unsubscribe(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):F[Unit]", "kind" : "abstract def"}, {"label" : "subscribe", "tail" : "(channel: RedisChannel[K]): F[V]", "member" : "dev.profunktor.redis4cats.pubsub.SubscribeCommands.subscribe", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#subscribe(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):F[V]", "kind" : "abstract def"}, {"label" : "publish", "tail" : "(channel: RedisChannel[K]): (F[V]) ⇒ F[Unit]", "member" : "dev.profunktor.redis4cats.pubsub.PublishCommands.publish", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#publish(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):F[V]=>F[Unit]", "kind" : "abstract def"}, {"label" : "pubSubSubscriptions", "tail" : "(channels: List[RedisChannel[K]]): F[List[Subscription[K]]]", "member" : "dev.profunktor.redis4cats.pubsub.PubSubStats.pubSubSubscriptions", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#pubSubSubscriptions(channels:List[dev.profunktor.redis4cats.data.RedisChannel[K]]):F[List[dev.profunktor.redis4cats.pubsub.data.Subscription[K]]]", "kind" : "abstract def"}, {"label" : "pubSubSubscriptions", "tail" : "(channel: RedisChannel[K]): F[Subscription[K]]", "member" : "dev.profunktor.redis4cats.pubsub.PubSubStats.pubSubSubscriptions", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#pubSubSubscriptions(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):F[dev.profunktor.redis4cats.pubsub.data.Subscription[K]]", "kind" : "abstract def"}, {"label" : "pubSubChannels", "tail" : "(): F[List[K]]", "member" : "dev.profunktor.redis4cats.pubsub.PubSubStats.pubSubChannels", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html#pubSubChannels:F[List[K]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubCommands.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.pubsub.PubSubStats", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PubSubStats[F, K]) ⇒ Boolean, msg: ⇒ Any): PubSubStats[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (PubSubStats[F, K]) ⇒ Boolean): PubSubStats[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): PubSubStats[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): PubSubStats[F, K]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (PubSubStats[F, K], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (PubSubStats[F, K], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "pubSubSubscriptions", "tail" : "(channels: List[RedisChannel[K]]): F[List[Subscription[K]]]", "member" : "dev.profunktor.redis4cats.pubsub.PubSubStats.pubSubSubscriptions", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#pubSubSubscriptions(channels:List[dev.profunktor.redis4cats.data.RedisChannel[K]]):F[List[dev.profunktor.redis4cats.pubsub.data.Subscription[K]]]", "kind" : "abstract def"}, {"label" : "pubSubSubscriptions", "tail" : "(channel: RedisChannel[K]): F[Subscription[K]]", "member" : "dev.profunktor.redis4cats.pubsub.PubSubStats.pubSubSubscriptions", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#pubSubSubscriptions(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):F[dev.profunktor.redis4cats.pubsub.data.Subscription[K]]", "kind" : "abstract def"}, {"label" : "pubSubChannels", "tail" : "(): F[List[K]]", "member" : "dev.profunktor.redis4cats.pubsub.PubSubStats.pubSubChannels", "link" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html#pubSubChannels:F[List[K]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/pubsub\/PubSubStats.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.pubsub.SubscribeCommands", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SubscribeCommands[F, K, V]) ⇒ Boolean, msg: ⇒ Any): SubscribeCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SubscribeCommands[F, K, V]) ⇒ Boolean): SubscribeCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SubscribeCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SubscribeCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SubscribeCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SubscribeCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "unsubscribe", "tail" : "(channel: RedisChannel[K]): F[Unit]", "member" : "dev.profunktor.redis4cats.pubsub.SubscribeCommands.unsubscribe", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#unsubscribe(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):F[Unit]", "kind" : "abstract def"}, {"label" : "subscribe", "tail" : "(channel: RedisChannel[K]): F[V]", "member" : "dev.profunktor.redis4cats.pubsub.SubscribeCommands.subscribe", "link" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html#subscribe(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):F[V]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "dev\/profunktor\/redis4cats\/pubsub\/SubscribeCommands.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.pubsub.Subscriber", "shortDescription" : "", "members_class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Subscriber[F, K, V]) ⇒ Boolean, msg: ⇒ Any): Subscriber[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (Subscriber[F, K, V]) ⇒ Boolean): Subscriber[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): Subscriber[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): Subscriber[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (Subscriber[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (Subscriber[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "unsubscribe", "tail" : "(channel: RedisChannel[K]): Stream[F, Unit]", "member" : "dev.profunktor.redis4cats.pubsub.Subscriber.unsubscribe", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#unsubscribe(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):fs2.Stream[F,Unit]", "kind" : "def"}, {"label" : "subscribe", "tail" : "(channel: RedisChannel[K]): Stream[F, V]", "member" : "dev.profunktor.redis4cats.pubsub.Subscriber.subscribe", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#subscribe(channel:dev.profunktor.redis4cats.data.RedisChannel[K]):fs2.Stream[F,V]", "kind" : "def"}, {"label" : "E$F$Subscriber", "tail" : "", "member" : "dev.profunktor.redis4cats.pubsub.Subscriber.E$F$Subscriber", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#E$F$SubscriberextendsAnyRef", "kind" : "abstract class"}, {"member" : "dev.profunktor.redis4cats.pubsub.Subscriber#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "dev\/profunktor\/redis4cats\/pubsub\/Subscriber.html", "kind" : "class"}], "dev.profunktor.redis4cats.codecs.splits" : [{"name" : "dev.profunktor.redis4cats.codecs.splits.SplitEpi", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SplitEpi[A, B]) ⇒ Boolean, msg: ⇒ Any): SplitEpi[A, B]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SplitEpi[A, B]) ⇒ Boolean): SplitEpi[A, B]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SplitEpi[A, B]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SplitEpi[A, B]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SplitEpi[A, B], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SplitEpi[A, B], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "andThen", "tail" : "(f: SplitEpi[B, C]): SplitEpi[A, C]", "member" : "dev.profunktor.redis4cats.codecs.splits.SplitEpi.andThen", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#andThen[C](f:dev.profunktor.redis4cats.codecs.splits.SplitEpi[B,C]):dev.profunktor.redis4cats.codecs.splits.SplitEpi[A,C]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): SplitMono[B, A]", "member" : "dev.profunktor.redis4cats.codecs.splits.SplitEpi.reverse", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#reverse:dev.profunktor.redis4cats.codecs.splits.SplitMono[B,A]", "kind" : "def"}, {"label" : "apply", "tail" : "(a: A): B", "member" : "dev.profunktor.redis4cats.codecs.splits.SplitEpi.apply", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#apply(a:A):B", "kind" : "def"}, {"member" : "dev.profunktor.redis4cats.codecs.splits.SplitEpi#<init>", "error" : "unsupported entity"}, {"label" : "reverseGet", "tail" : ": (B) ⇒ A", "member" : "dev.profunktor.redis4cats.codecs.splits.SplitEpi.reverseGet", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#reverseGet:B=>A", "kind" : "val"}, {"label" : "get", "tail" : ": (A) ⇒ B", "member" : "dev.profunktor.redis4cats.codecs.splits.SplitEpi.get", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#get:A=>B", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (B) ⇒ A): (A) ⇒ A", "member" : "scala.Function1.andThen", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ A): (A) ⇒ B", "member" : "scala.Function1.compose", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitEpi.html", "kind" : "case class"}, {"name" : "dev.profunktor.redis4cats.codecs.splits.SplitMono", "shortDescription" : "", "members_case class" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SplitMono[A, B]) ⇒ Boolean, msg: ⇒ Any): SplitMono[A, B]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (SplitMono[A, B]) ⇒ Boolean): SplitMono[A, B]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): SplitMono[A, B]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): SplitMono[A, B]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (SplitMono[A, B], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (SplitMono[A, B], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "andThen", "tail" : "(f: SplitMono[B, C]): SplitMono[A, C]", "member" : "dev.profunktor.redis4cats.codecs.splits.SplitMono.andThen", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#andThen[C](f:dev.profunktor.redis4cats.codecs.splits.SplitMono[B,C]):dev.profunktor.redis4cats.codecs.splits.SplitMono[A,C]", "kind" : "def"}, {"label" : "reverse", "tail" : "(): SplitEpi[B, A]", "member" : "dev.profunktor.redis4cats.codecs.splits.SplitMono.reverse", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#reverse:dev.profunktor.redis4cats.codecs.splits.SplitEpi[B,A]", "kind" : "def"}, {"label" : "apply", "tail" : "(a: A): B", "member" : "dev.profunktor.redis4cats.codecs.splits.SplitMono.apply", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#apply(a:A):B", "kind" : "def"}, {"member" : "dev.profunktor.redis4cats.codecs.splits.SplitMono#<init>", "error" : "unsupported entity"}, {"label" : "reverseGet", "tail" : ": (B) ⇒ A", "member" : "dev.profunktor.redis4cats.codecs.splits.SplitMono.reverseGet", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#reverseGet:B=>A", "kind" : "val"}, {"label" : "get", "tail" : ": (A) ⇒ B", "member" : "dev.profunktor.redis4cats.codecs.splits.SplitMono.get", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#get:A=>B", "kind" : "val"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Function1.toString", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#toString():String", "kind" : "def"}, {"label" : "andThen", "tail" : "(g: (B) ⇒ A): (A) ⇒ A", "member" : "scala.Function1.andThen", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#andThen[A](g:R=>A):T1=>A", "kind" : "def"}, {"label" : "compose", "tail" : "(g: (A) ⇒ A): (A) ⇒ B", "member" : "scala.Function1.compose", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#compose[A](g:A=>T1):A=>R", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "dev\/profunktor\/redis4cats\/codecs\/splits\/SplitMono.html", "kind" : "case class"}], "dev.profunktor.redis4cats" : [{"name" : "dev.profunktor.redis4cats.data", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/data$.html", "members_object" : [{"label" : "ReadFrom", "tail" : "", "member" : "dev.profunktor.redis4cats.data.ReadFrom", "link" : "dev\/profunktor\/redis4cats\/data$.html#ReadFrom", "kind" : "object"}, {"label" : "KeyScanCursor", "tail" : "", "member" : "dev.profunktor.redis4cats.data.KeyScanCursor", "link" : "dev\/profunktor\/redis4cats\/data$.html#KeyScanCursor[K]extendsAnyValwithProductwithSerializable", "kind" : "final case class"}, {"label" : "NodeId", "tail" : "", "member" : "dev.profunktor.redis4cats.data.NodeId", "link" : "dev\/profunktor\/redis4cats\/data$.html#NodeIdextendsAnyValwithProductwithSerializable", "kind" : "final case class"}, {"label" : "RedisCodec", "tail" : "", "member" : "dev.profunktor.redis4cats.data.RedisCodec", "link" : "dev\/profunktor\/redis4cats\/data$.html#RedisCodec", "kind" : "object"}, {"label" : "RedisCodec", "tail" : "", "member" : "dev.profunktor.redis4cats.data.RedisCodec", "link" : "dev\/profunktor\/redis4cats\/data$.html#RedisCodec[K,V]extendsAnyValwithProductwithSerializable", "kind" : "final case class"}, {"label" : "RedisChannel", "tail" : "", "member" : "dev.profunktor.redis4cats.data.RedisChannel", "link" : "dev\/profunktor\/redis4cats\/data$.html#RedisChannel[K]extendsAnyValwithProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/data$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/data$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/data$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/data$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/data$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/data$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/data$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/data$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/data$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/data$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/data$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/data$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/data$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/data$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/data$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/data$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/data$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/data$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/data$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dev.profunktor.redis4cats.effects", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/effects$.html", "members_object" : [{"label" : "SetArgs", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.SetArgs", "link" : "dev\/profunktor\/redis4cats\/effects$.html#SetArgs", "kind" : "object"}, {"label" : "SetArgs", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.SetArgs", "link" : "dev\/profunktor\/redis4cats\/effects$.html#SetArgsextendsProductwithSerializable", "kind" : "case class"}, {"label" : "SetArg", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.SetArg", "link" : "dev\/profunktor\/redis4cats\/effects$.html#SetArg", "kind" : "object"}, {"label" : "SetArg", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.SetArg", "link" : "dev\/profunktor\/redis4cats\/effects$.html#SetArgextendsAnyRef", "kind" : "sealed trait"}, {"label" : "ScriptOutputType", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.ScriptOutputType", "link" : "dev\/profunktor\/redis4cats\/effects$.html#ScriptOutputType", "kind" : "object"}, {"label" : "ScriptOutputType", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.ScriptOutputType", "link" : "dev\/profunktor\/redis4cats\/effects$.html#ScriptOutputType[V]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "RangeLimit", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.RangeLimit", "link" : "dev\/profunktor\/redis4cats\/effects$.html#RangeLimitextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "ZRange", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.ZRange", "link" : "dev\/profunktor\/redis4cats\/effects$.html#ZRange[V]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "ScoreWithValue", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.ScoreWithValue", "link" : "dev\/profunktor\/redis4cats\/effects$.html#ScoreWithValue[V]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "Score", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.Score", "link" : "dev\/profunktor\/redis4cats\/effects$.html#ScoreextendsAnyValwithProductwithSerializable", "kind" : "final case class"}, {"label" : "GeoRadiusDistStorage", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.GeoRadiusDistStorage", "link" : "dev\/profunktor\/redis4cats\/effects$.html#GeoRadiusDistStorage[K]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "GeoRadiusKeyStorage", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.GeoRadiusKeyStorage", "link" : "dev\/profunktor\/redis4cats\/effects$.html#GeoRadiusKeyStorage[K]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "GeoRadiusResult", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.GeoRadiusResult", "link" : "dev\/profunktor\/redis4cats\/effects$.html#GeoRadiusResult[V]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "GeoCoordinate", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.GeoCoordinate", "link" : "dev\/profunktor\/redis4cats\/effects$.html#GeoCoordinateextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "GeoRadius", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.GeoRadius", "link" : "dev\/profunktor\/redis4cats\/effects$.html#GeoRadiusextendsProductwithSerializable", "kind" : "final case class"}, {"label" : "GeoLocation", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.GeoLocation", "link" : "dev\/profunktor\/redis4cats\/effects$.html#GeoLocation[V]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "Longitude", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.Longitude", "link" : "dev\/profunktor\/redis4cats\/effects$.html#LongitudeextendsAnyValwithProductwithSerializable", "kind" : "final case class"}, {"label" : "Latitude", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.Latitude", "link" : "dev\/profunktor\/redis4cats\/effects$.html#LatitudeextendsAnyValwithProductwithSerializable", "kind" : "final case class"}, {"label" : "GeoHash", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.GeoHash", "link" : "dev\/profunktor\/redis4cats\/effects$.html#GeoHashextendsAnyValwithProductwithSerializable", "kind" : "final case class"}, {"label" : "Distance", "tail" : "", "member" : "dev.profunktor.redis4cats.effects.Distance", "link" : "dev\/profunktor\/redis4cats\/effects$.html#DistanceextendsAnyValwithProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/effects$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/effects$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/effects$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/effects$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/effects$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/effects$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/effects$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effects$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effects$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/effects$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/effects$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/effects$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/effects$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/effects$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/effects$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/effects$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/effects$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/effects$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/effects$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dev.profunktor.redis4cats.hlist", "shortDescription" : "An heterogeneous list, mainly used to operate on transactions.", "object" : "dev\/profunktor\/redis4cats\/hlist$.html", "members_object" : [{"label" : "NEqualLowPriority", "tail" : "", "member" : "dev.profunktor.redis4cats.hlist.NEqualLowPriority", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#NEqualLowPriorityextendsAnyRef", "kind" : "trait"}, {"label" : "=!=", "tail" : "", "member" : "dev.profunktor.redis4cats.hlist.=!=", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#=!=", "kind" : "object"}, {"label" : "=!=", "tail" : "", "member" : "dev.profunktor.redis4cats.hlist.=!=", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#=!=[A,B]extendsAnyRef", "kind" : "sealed class"}, {"label" : "Filter", "tail" : "", "member" : "dev.profunktor.redis4cats.hlist.Filter", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#Filter", "kind" : "object"}, {"label" : "Filter", "tail" : "", "member" : "dev.profunktor.redis4cats.hlist.Filter", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#Filter[T<:dev.profunktor.redis4cats.hlist.HList]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "Witness", "tail" : "", "member" : "dev.profunktor.redis4cats.hlist.Witness", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#Witness", "kind" : "object"}, {"label" : "Witness", "tail" : "", "member" : "dev.profunktor.redis4cats.hlist.Witness", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#Witness[T<:dev.profunktor.redis4cats.hlist.HList]extendsAnyRef", "kind" : "sealed trait"}, {"label" : "~:", "tail" : "", "member" : "dev.profunktor.redis4cats.hlist.~:", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#~:", "kind" : "object"}, {"label" : "HList", "tail" : "", "member" : "dev.profunktor.redis4cats.hlist.HList", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#HList", "kind" : "object"}, {"label" : "HNil", "tail" : "", "member" : "dev.profunktor.redis4cats.hlist.HNil", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#HNil", "kind" : "object"}, {"label" : "HCons", "tail" : "", "member" : "dev.profunktor.redis4cats.hlist.HCons", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#HCons[+H,+Tail<:dev.profunktor.redis4cats.hlist.HList]extendshlist.HListwithProductwithSerializable", "kind" : "final case class"}, {"label" : "HList", "tail" : "", "member" : "dev.profunktor.redis4cats.hlist.HList", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#HListextendsAnyRef", "kind" : "sealed trait"}, {"label" : "HNil", "tail" : "", "member" : "dev.profunktor.redis4cats.hlist.HNil", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#HNil=dev.profunktor.redis4cats.hlist.HNil.type", "kind" : "type"}, {"label" : "::", "tail" : "", "member" : "dev.profunktor.redis4cats.hlist.::", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#::[H,T<:dev.profunktor.redis4cats.hlist.HList]=dev.profunktor.redis4cats.hlist.HCons[H,T]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/hlist$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/hlist$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dev.profunktor.redis4cats.JavaConversions", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/JavaConversions$.html", "members_object" : [{"label" : "propertiesAsScalaMapConverter", "tail" : "(p: Properties): AsScala[Map[String, String]]", "member" : "scala.collection.convert.DecorateAsScala.propertiesAsScalaMapConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#propertiesAsScalaMapConverter(p:java.util.Properties):scala.collection.convert.Decorators.AsScala[scala.collection.mutable.Map[String,String]]", "kind" : "implicit def"}, {"label" : "dictionaryAsScalaMapConverter", "tail" : "(p: Dictionary[A, B]): AsScala[Map[A, B]]", "member" : "scala.collection.convert.DecorateAsScala.dictionaryAsScalaMapConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#dictionaryAsScalaMapConverter[A,B](p:java.util.Dictionary[A,B]):scala.collection.convert.Decorators.AsScala[scala.collection.mutable.Map[A,B]]", "kind" : "implicit def"}, {"label" : "mapAsScalaConcurrentMapConverter", "tail" : "(m: ConcurrentMap[A, B]): AsScala[Map[A, B]]", "member" : "scala.collection.convert.DecorateAsScala.mapAsScalaConcurrentMapConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#mapAsScalaConcurrentMapConverter[A,B](m:java.util.concurrent.ConcurrentMap[A,B]):scala.collection.convert.Decorators.AsScala[scala.collection.concurrent.Map[A,B]]", "kind" : "implicit def"}, {"label" : "mapAsScalaMapConverter", "tail" : "(m: Map[A, B]): AsScala[Map[A, B]]", "member" : "scala.collection.convert.DecorateAsScala.mapAsScalaMapConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#mapAsScalaMapConverter[A,B](m:java.util.Map[A,B]):scala.collection.convert.Decorators.AsScala[scala.collection.mutable.Map[A,B]]", "kind" : "implicit def"}, {"label" : "asScalaSetConverter", "tail" : "(s: Set[A]): AsScala[Set[A]]", "member" : "scala.collection.convert.DecorateAsScala.asScalaSetConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#asScalaSetConverter[A](s:java.util.Set[A]):scala.collection.convert.Decorators.AsScala[scala.collection.mutable.Set[A]]", "kind" : "implicit def"}, {"label" : "asScalaBufferConverter", "tail" : "(l: List[A]): AsScala[Buffer[A]]", "member" : "scala.collection.convert.DecorateAsScala.asScalaBufferConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#asScalaBufferConverter[A](l:java.util.List[A]):scala.collection.convert.Decorators.AsScala[scala.collection.mutable.Buffer[A]]", "kind" : "implicit def"}, {"label" : "collectionAsScalaIterableConverter", "tail" : "(i: Collection[A]): AsScala[Iterable[A]]", "member" : "scala.collection.convert.DecorateAsScala.collectionAsScalaIterableConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#collectionAsScalaIterableConverter[A](i:java.util.Collection[A]):scala.collection.convert.Decorators.AsScala[Iterable[A]]", "kind" : "implicit def"}, {"label" : "iterableAsScalaIterableConverter", "tail" : "(i: Iterable[A]): AsScala[Iterable[A]]", "member" : "scala.collection.convert.DecorateAsScala.iterableAsScalaIterableConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#iterableAsScalaIterableConverter[A](i:Iterable[A]):scala.collection.convert.Decorators.AsScala[Iterable[A]]", "kind" : "implicit def"}, {"label" : "enumerationAsScalaIteratorConverter", "tail" : "(i: Enumeration[A]): AsScala[Iterator[A]]", "member" : "scala.collection.convert.DecorateAsScala.enumerationAsScalaIteratorConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#enumerationAsScalaIteratorConverter[A](i:java.util.Enumeration[A]):scala.collection.convert.Decorators.AsScala[Iterator[A]]", "kind" : "implicit def"}, {"label" : "asScalaIteratorConverter", "tail" : "(i: Iterator[A]): AsScala[Iterator[A]]", "member" : "scala.collection.convert.DecorateAsScala.asScalaIteratorConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#asScalaIteratorConverter[A](i:java.util.Iterator[A]):scala.collection.convert.Decorators.AsScala[Iterator[A]]", "kind" : "implicit def"}, {"label" : "propertiesAsScalaMap", "tail" : "(p: Properties): Map[String, String]", "member" : "scala.collection.convert.AsScalaConverters.propertiesAsScalaMap", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#propertiesAsScalaMap(p:java.util.Properties):scala.collection.mutable.Map[String,String]", "kind" : "def"}, {"label" : "dictionaryAsScalaMap", "tail" : "(p: Dictionary[A, B]): Map[A, B]", "member" : "scala.collection.convert.AsScalaConverters.dictionaryAsScalaMap", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#dictionaryAsScalaMap[A,B](p:java.util.Dictionary[A,B]):scala.collection.mutable.Map[A,B]", "kind" : "def"}, {"label" : "mapAsScalaConcurrentMap", "tail" : "(m: ConcurrentMap[A, B]): Map[A, B]", "member" : "scala.collection.convert.AsScalaConverters.mapAsScalaConcurrentMap", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#mapAsScalaConcurrentMap[A,B](m:java.util.concurrent.ConcurrentMap[A,B]):scala.collection.concurrent.Map[A,B]", "kind" : "def"}, {"label" : "mapAsScalaMap", "tail" : "(m: Map[A, B]): Map[A, B]", "member" : "scala.collection.convert.AsScalaConverters.mapAsScalaMap", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#mapAsScalaMap[A,B](m:java.util.Map[A,B]):scala.collection.mutable.Map[A,B]", "kind" : "def"}, {"label" : "asScalaSet", "tail" : "(s: Set[A]): Set[A]", "member" : "scala.collection.convert.AsScalaConverters.asScalaSet", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#asScalaSet[A](s:java.util.Set[A]):scala.collection.mutable.Set[A]", "kind" : "def"}, {"label" : "asScalaBuffer", "tail" : "(l: List[A]): Buffer[A]", "member" : "scala.collection.convert.AsScalaConverters.asScalaBuffer", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#asScalaBuffer[A](l:java.util.List[A]):scala.collection.mutable.Buffer[A]", "kind" : "def"}, {"label" : "collectionAsScalaIterable", "tail" : "(i: Collection[A]): Iterable[A]", "member" : "scala.collection.convert.AsScalaConverters.collectionAsScalaIterable", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#collectionAsScalaIterable[A](i:java.util.Collection[A]):Iterable[A]", "kind" : "def"}, {"label" : "iterableAsScalaIterable", "tail" : "(i: Iterable[A]): Iterable[A]", "member" : "scala.collection.convert.AsScalaConverters.iterableAsScalaIterable", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#iterableAsScalaIterable[A](i:Iterable[A]):Iterable[A]", "kind" : "def"}, {"label" : "enumerationAsScalaIterator", "tail" : "(i: Enumeration[A]): Iterator[A]", "member" : "scala.collection.convert.AsScalaConverters.enumerationAsScalaIterator", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#enumerationAsScalaIterator[A](i:java.util.Enumeration[A]):Iterator[A]", "kind" : "def"}, {"label" : "asScalaIterator", "tail" : "(i: Iterator[A]): Iterator[A]", "member" : "scala.collection.convert.AsScalaConverters.asScalaIterator", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#asScalaIterator[A](i:java.util.Iterator[A]):Iterator[A]", "kind" : "def"}, {"label" : "mapAsJavaConcurrentMapConverter", "tail" : "(m: Map[A, B]): AsJava[ConcurrentMap[A, B]]", "member" : "scala.collection.convert.DecorateAsJava.mapAsJavaConcurrentMapConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#mapAsJavaConcurrentMapConverter[A,B](m:scala.collection.concurrent.Map[A,B]):scala.collection.convert.Decorators.AsJava[java.util.concurrent.ConcurrentMap[A,B]]", "kind" : "implicit def"}, {"label" : "mapAsJavaMapConverter", "tail" : "(m: Map[A, B]): AsJava[Map[A, B]]", "member" : "scala.collection.convert.DecorateAsJava.mapAsJavaMapConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#mapAsJavaMapConverter[A,B](m:scala.collection.Map[A,B]):scala.collection.convert.Decorators.AsJava[java.util.Map[A,B]]", "kind" : "implicit def"}, {"label" : "asJavaDictionaryConverter", "tail" : "(m: Map[A, B]): AsJavaDictionary[A, B]", "member" : "scala.collection.convert.DecorateAsJava.asJavaDictionaryConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#asJavaDictionaryConverter[A,B](m:scala.collection.mutable.Map[A,B]):scala.collection.convert.Decorators.AsJavaDictionary[A,B]", "kind" : "implicit def"}, {"label" : "mutableMapAsJavaMapConverter", "tail" : "(m: Map[A, B]): AsJava[Map[A, B]]", "member" : "scala.collection.convert.DecorateAsJava.mutableMapAsJavaMapConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#mutableMapAsJavaMapConverter[A,B](m:scala.collection.mutable.Map[A,B]):scala.collection.convert.Decorators.AsJava[java.util.Map[A,B]]", "kind" : "implicit def"}, {"label" : "setAsJavaSetConverter", "tail" : "(s: Set[A]): AsJava[Set[A]]", "member" : "scala.collection.convert.DecorateAsJava.setAsJavaSetConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#setAsJavaSetConverter[A](s:scala.collection.Set[A]):scala.collection.convert.Decorators.AsJava[java.util.Set[A]]", "kind" : "implicit def"}, {"label" : "mutableSetAsJavaSetConverter", "tail" : "(s: Set[A]): AsJava[Set[A]]", "member" : "scala.collection.convert.DecorateAsJava.mutableSetAsJavaSetConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#mutableSetAsJavaSetConverter[A](s:scala.collection.mutable.Set[A]):scala.collection.convert.Decorators.AsJava[java.util.Set[A]]", "kind" : "implicit def"}, {"label" : "seqAsJavaListConverter", "tail" : "(b: Seq[A]): AsJava[List[A]]", "member" : "scala.collection.convert.DecorateAsJava.seqAsJavaListConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#seqAsJavaListConverter[A](b:Seq[A]):scala.collection.convert.Decorators.AsJava[java.util.List[A]]", "kind" : "implicit def"}, {"label" : "mutableSeqAsJavaListConverter", "tail" : "(b: Seq[A]): AsJava[List[A]]", "member" : "scala.collection.convert.DecorateAsJava.mutableSeqAsJavaListConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#mutableSeqAsJavaListConverter[A](b:scala.collection.mutable.Seq[A]):scala.collection.convert.Decorators.AsJava[java.util.List[A]]", "kind" : "implicit def"}, {"label" : "bufferAsJavaListConverter", "tail" : "(b: Buffer[A]): AsJava[List[A]]", "member" : "scala.collection.convert.DecorateAsJava.bufferAsJavaListConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#bufferAsJavaListConverter[A](b:scala.collection.mutable.Buffer[A]):scala.collection.convert.Decorators.AsJava[java.util.List[A]]", "kind" : "implicit def"}, {"label" : "asJavaCollectionConverter", "tail" : "(i: Iterable[A]): AsJavaCollection[A]", "member" : "scala.collection.convert.DecorateAsJava.asJavaCollectionConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#asJavaCollectionConverter[A](i:Iterable[A]):scala.collection.convert.Decorators.AsJavaCollection[A]", "kind" : "implicit def"}, {"label" : "asJavaIterableConverter", "tail" : "(i: Iterable[A]): AsJava[Iterable[A]]", "member" : "scala.collection.convert.DecorateAsJava.asJavaIterableConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#asJavaIterableConverter[A](i:Iterable[A]):scala.collection.convert.Decorators.AsJava[Iterable[A]]", "kind" : "implicit def"}, {"label" : "asJavaEnumerationConverter", "tail" : "(i: Iterator[A]): AsJavaEnumeration[A]", "member" : "scala.collection.convert.DecorateAsJava.asJavaEnumerationConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#asJavaEnumerationConverter[A](i:Iterator[A]):scala.collection.convert.Decorators.AsJavaEnumeration[A]", "kind" : "implicit def"}, {"label" : "asJavaIteratorConverter", "tail" : "(i: Iterator[A]): AsJava[Iterator[A]]", "member" : "scala.collection.convert.DecorateAsJava.asJavaIteratorConverter", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#asJavaIteratorConverter[A](i:Iterator[A]):scala.collection.convert.Decorators.AsJava[java.util.Iterator[A]]", "kind" : "implicit def"}, {"label" : "mapAsJavaConcurrentMap", "tail" : "(m: Map[A, B]): ConcurrentMap[A, B]", "member" : "scala.collection.convert.AsJavaConverters.mapAsJavaConcurrentMap", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#mapAsJavaConcurrentMap[A,B](m:scala.collection.concurrent.Map[A,B]):java.util.concurrent.ConcurrentMap[A,B]", "kind" : "def"}, {"label" : "mapAsJavaMap", "tail" : "(m: Map[A, B]): Map[A, B]", "member" : "scala.collection.convert.AsJavaConverters.mapAsJavaMap", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#mapAsJavaMap[A,B](m:scala.collection.Map[A,B]):java.util.Map[A,B]", "kind" : "def"}, {"label" : "asJavaDictionary", "tail" : "(m: Map[A, B]): Dictionary[A, B]", "member" : "scala.collection.convert.AsJavaConverters.asJavaDictionary", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#asJavaDictionary[A,B](m:scala.collection.mutable.Map[A,B]):java.util.Dictionary[A,B]", "kind" : "def"}, {"label" : "mutableMapAsJavaMap", "tail" : "(m: Map[A, B]): Map[A, B]", "member" : "scala.collection.convert.AsJavaConverters.mutableMapAsJavaMap", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#mutableMapAsJavaMap[A,B](m:scala.collection.mutable.Map[A,B]):java.util.Map[A,B]", "kind" : "def"}, {"label" : "setAsJavaSet", "tail" : "(s: Set[A]): Set[A]", "member" : "scala.collection.convert.AsJavaConverters.setAsJavaSet", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#setAsJavaSet[A](s:scala.collection.Set[A]):java.util.Set[A]", "kind" : "def"}, {"label" : "mutableSetAsJavaSet", "tail" : "(s: Set[A]): Set[A]", "member" : "scala.collection.convert.AsJavaConverters.mutableSetAsJavaSet", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#mutableSetAsJavaSet[A](s:scala.collection.mutable.Set[A]):java.util.Set[A]", "kind" : "def"}, {"label" : "seqAsJavaList", "tail" : "(s: Seq[A]): List[A]", "member" : "scala.collection.convert.AsJavaConverters.seqAsJavaList", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#seqAsJavaList[A](s:Seq[A]):java.util.List[A]", "kind" : "def"}, {"label" : "mutableSeqAsJavaList", "tail" : "(s: Seq[A]): List[A]", "member" : "scala.collection.convert.AsJavaConverters.mutableSeqAsJavaList", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#mutableSeqAsJavaList[A](s:scala.collection.mutable.Seq[A]):java.util.List[A]", "kind" : "def"}, {"label" : "bufferAsJavaList", "tail" : "(b: Buffer[A]): List[A]", "member" : "scala.collection.convert.AsJavaConverters.bufferAsJavaList", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#bufferAsJavaList[A](b:scala.collection.mutable.Buffer[A]):java.util.List[A]", "kind" : "def"}, {"label" : "asJavaCollection", "tail" : "(i: Iterable[A]): Collection[A]", "member" : "scala.collection.convert.AsJavaConverters.asJavaCollection", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#asJavaCollection[A](i:Iterable[A]):java.util.Collection[A]", "kind" : "def"}, {"label" : "asJavaIterable", "tail" : "(i: Iterable[A]): Iterable[A]", "member" : "scala.collection.convert.AsJavaConverters.asJavaIterable", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#asJavaIterable[A](i:Iterable[A]):Iterable[A]", "kind" : "def"}, {"label" : "asJavaEnumeration", "tail" : "(i: Iterator[A]): Enumeration[A]", "member" : "scala.collection.convert.AsJavaConverters.asJavaEnumeration", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#asJavaEnumeration[A](i:Iterator[A]):java.util.Enumeration[A]", "kind" : "def"}, {"label" : "asJavaIterator", "tail" : "(i: Iterator[A]): Iterator[A]", "member" : "scala.collection.convert.AsJavaConverters.asJavaIterator", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#asJavaIterator[A](i:Iterator[A]):java.util.Iterator[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/JavaConversions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dev.profunktor.redis4cats.log4cats", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/log4cats$.html", "members_object" : [{"label" : "log4CatsInstance", "tail" : "(arg0: Logger[F]): Log[F]", "member" : "dev.profunktor.redis4cats.log4cats.log4CatsInstance", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#log4CatsInstance[F[_]](implicitevidence$1:io.chrisdavenport.log4cats.Logger[F]):dev.profunktor.redis4cats.effect.Log[F]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/log4cats$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dev.profunktor.redis4cats.pipeline", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/pipeline$.html", "members_object" : [{"label" : "RedisPipeline", "tail" : "", "member" : "dev.profunktor.redis4cats.pipeline.RedisPipeline", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#RedisPipeline[F[_],K,V]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "PipelineError", "tail" : "", "member" : "dev.profunktor.redis4cats.pipeline.PipelineError", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#PipelineError", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/pipeline$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dev.profunktor.redis4cats.Redis", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/Redis$.html", "members_object" : [{"label" : "apply", "tail" : "(arg0: Concurrent[F], arg1: ContextShift[F], arg2: Log[F]): RedisPartiallyApplied[F]", "member" : "dev.profunktor.redis4cats.Redis.apply", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#apply[F[_]](implicitevidence$13:cats.effect.Concurrent[F],implicitevidence$14:cats.effect.ContextShift[F],implicitevidence$15:dev.profunktor.redis4cats.effect.Log[F]):dev.profunktor.redis4cats.Redis.RedisPartiallyApplied[F]", "kind" : "def"}, {"label" : "RedisPartiallyApplied", "tail" : "", "member" : "dev.profunktor.redis4cats.Redis.RedisPartiallyApplied", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#RedisPartiallyApplied[F[_]]extendsAnyRef", "kind" : "class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/Redis$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/Redis$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dev.profunktor.redis4cats.RedisCommands", "members_trait" : [{"label" : "+", "tail" : "(other: String): String", "member" : "scala.Predef.any2stringadd.+", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#+(other:String):String", "kind" : "def"}, {"label" : "formatted", "tail" : "(fmtstr: String): String", "member" : "scala.Predef.StringFormat.formatted", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#formatted(fmtstr:String):String", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RedisCommands[F, K, V]) ⇒ Boolean, msg: ⇒ Any): RedisCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#ensuring(cond:A=>Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: (RedisCommands[F, K, V]) ⇒ Boolean): RedisCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#ensuring(cond:A=>Boolean):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean, msg: ⇒ Any): RedisCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#ensuring(cond:Boolean,msg:=>Any):A", "kind" : "def"}, {"label" : "ensuring", "tail" : "(cond: Boolean): RedisCommands[F, K, V]", "member" : "scala.Predef.Ensuring.ensuring", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#ensuring(cond:Boolean):A", "kind" : "def"}, {"label" : "→", "tail" : "(y: B): (RedisCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.→", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#→[B](y:B):(A,B)", "kind" : "def"}, {"label" : "->", "tail" : "(y: B): (RedisCommands[F, K, V], B)", "member" : "scala.Predef.ArrowAssoc.->", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#->[B](y:B):(A,B)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "scan", "tail" : "(cursor: Long): F[KeyScanCursor[K]]", "member" : "dev.profunktor.redis4cats.algebra.KeyCommands.scan", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#scan(cursor:Long):F[dev.profunktor.redis4cats.data.KeyScanCursor[K]]", "kind" : "abstract def"}, {"label" : "scan", "tail" : "(): F[KeyScanCursor[K]]", "member" : "dev.profunktor.redis4cats.algebra.KeyCommands.scan", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#scan:F[dev.profunktor.redis4cats.data.KeyScanCursor[K]]", "kind" : "abstract def"}, {"label" : "pttl", "tail" : "(key: K): F[Option[FiniteDuration]]", "member" : "dev.profunktor.redis4cats.algebra.KeyCommands.pttl", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#pttl(key:K):F[Option[scala.concurrent.duration.FiniteDuration]]", "kind" : "abstract def"}, {"label" : "ttl", "tail" : "(key: K): F[Option[FiniteDuration]]", "member" : "dev.profunktor.redis4cats.algebra.KeyCommands.ttl", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#ttl(key:K):F[Option[scala.concurrent.duration.FiniteDuration]]", "kind" : "abstract def"}, {"label" : "expire", "tail" : "(k: K, seconds: FiniteDuration): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.KeyCommands.expire", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#expire(k:K,seconds:scala.concurrent.duration.FiniteDuration):F[Unit]", "kind" : "abstract def"}, {"label" : "exists", "tail" : "(key: K*): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.KeyCommands.exists", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#exists(key:K*):F[Boolean]", "kind" : "abstract def"}, {"label" : "del", "tail" : "(key: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.KeyCommands.del", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#del(key:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "scriptFlush", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.scriptFlush", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#scriptFlush:F[Unit]", "kind" : "abstract def"}, {"label" : "scriptExists", "tail" : "(digests: String*): F[List[Boolean]]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.scriptExists", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#scriptExists(digests:String*):F[List[Boolean]]", "kind" : "abstract def"}, {"label" : "scriptLoad", "tail" : "(script: V): F[String]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.scriptLoad", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#scriptLoad(script:V):F[String]", "kind" : "abstract def"}, {"label" : "evalSha", "tail" : "(script: String, output: ScriptOutputType[V], keys: List[K], values: List[V]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.evalSha", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#evalSha(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V],keys:List[K],values:List[V]):F[output.R]", "kind" : "abstract def"}, {"label" : "evalSha", "tail" : "(script: String, output: ScriptOutputType[V], keys: List[K]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.evalSha", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#evalSha(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V],keys:List[K]):F[output.R]", "kind" : "abstract def"}, {"label" : "evalSha", "tail" : "(script: String, output: ScriptOutputType[V]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.evalSha", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#evalSha(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V]):F[output.R]", "kind" : "abstract def"}, {"label" : "eval", "tail" : "(script: String, output: ScriptOutputType[V], keys: List[K], values: List[V]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.eval", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#eval(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V],keys:List[K],values:List[V]):F[output.R]", "kind" : "abstract def"}, {"label" : "eval", "tail" : "(script: String, output: ScriptOutputType[V], keys: List[K]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.eval", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#eval(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V],keys:List[K]):F[output.R]", "kind" : "abstract def"}, {"label" : "eval", "tail" : "(script: String, output: ScriptOutputType[V]): F[R]", "member" : "dev.profunktor.redis4cats.algebra.Scripting.eval", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#eval(script:String,output:dev.profunktor.redis4cats.effects.ScriptOutputType[V]):F[output.R]", "kind" : "abstract def"}, {"label" : "flushCommands", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.AutoFlush.flushCommands", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#flushCommands:F[Unit]", "kind" : "abstract def"}, {"label" : "disableAutoFlush", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.AutoFlush.disableAutoFlush", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#disableAutoFlush:F[Unit]", "kind" : "abstract def"}, {"label" : "enableAutoFlush", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.AutoFlush.enableAutoFlush", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#enableAutoFlush:F[Unit]", "kind" : "abstract def"}, {"label" : "unwatch", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Watcher.unwatch", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#unwatch:F[Unit]", "kind" : "abstract def"}, {"label" : "watch", "tail" : "(keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Watcher.watch", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#watch(keys:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "discard", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Transaction.discard", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#discard:F[Unit]", "kind" : "abstract def"}, {"label" : "exec", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Transaction.exec", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#exec:F[Unit]", "kind" : "abstract def"}, {"label" : "multi", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Transaction.multi", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#multi:F[Unit]", "kind" : "abstract def"}, {"label" : "slowLogLen", "tail" : "(): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Diagnostic.slowLogLen", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#slowLogLen:F[Long]", "kind" : "abstract def"}, {"label" : "lastSave", "tail" : "(): F[Instant]", "member" : "dev.profunktor.redis4cats.algebra.Diagnostic.lastSave", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#lastSave:F[java.time.Instant]", "kind" : "abstract def"}, {"label" : "dbsize", "tail" : "(): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Diagnostic.dbsize", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#dbsize:F[Long]", "kind" : "abstract def"}, {"label" : "info", "tail" : "(): F[Map[String, String]]", "member" : "dev.profunktor.redis4cats.algebra.Diagnostic.info", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#info:F[Map[String,String]]", "kind" : "abstract def"}, {"label" : "flushAllAsync", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Flush.flushAllAsync", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#flushAllAsync:F[Unit]", "kind" : "abstract def"}, {"label" : "flushAll", "tail" : "(): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Flush.flushAll", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#flushAll:F[Unit]", "kind" : "abstract def"}, {"label" : "keys", "tail" : "(key: K): F[List[K]]", "member" : "dev.profunktor.redis4cats.algebra.Flush.keys", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#keys(key:K):F[List[K]]", "kind" : "abstract def"}, {"label" : "ping", "tail" : "(): F[String]", "member" : "dev.profunktor.redis4cats.algebra.Ping.ping", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#ping:F[String]", "kind" : "abstract def"}, {"label" : "geoRadiusByMember", "tail" : "(key: K, value: V, dist: Distance, unit: Unit, storage: GeoRadiusDistStorage[K]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.GeoSetter.geoRadiusByMember", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#geoRadiusByMember(key:K,value:V,dist:dev.profunktor.redis4cats.effects.Distance,unit:io.lettuce.core.GeoArgs.Unit,storage:dev.profunktor.redis4cats.effects.GeoRadiusDistStorage[K]):F[Unit]", "kind" : "abstract def"}, {"label" : "geoRadiusByMember", "tail" : "(key: K, value: V, dist: Distance, unit: Unit, storage: GeoRadiusKeyStorage[K]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.GeoSetter.geoRadiusByMember", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#geoRadiusByMember(key:K,value:V,dist:dev.profunktor.redis4cats.effects.Distance,unit:io.lettuce.core.GeoArgs.Unit,storage:dev.profunktor.redis4cats.effects.GeoRadiusKeyStorage[K]):F[Unit]", "kind" : "abstract def"}, {"label" : "geoRadius", "tail" : "(key: K, geoRadius: GeoRadius, unit: Unit, storage: GeoRadiusDistStorage[K]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.GeoSetter.geoRadius", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#geoRadius(key:K,geoRadius:dev.profunktor.redis4cats.effects.GeoRadius,unit:io.lettuce.core.GeoArgs.Unit,storage:dev.profunktor.redis4cats.effects.GeoRadiusDistStorage[K]):F[Unit]", "kind" : "abstract def"}, {"label" : "geoRadius", "tail" : "(key: K, geoRadius: GeoRadius, unit: Unit, storage: GeoRadiusKeyStorage[K]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.GeoSetter.geoRadius", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#geoRadius(key:K,geoRadius:dev.profunktor.redis4cats.effects.GeoRadius,unit:io.lettuce.core.GeoArgs.Unit,storage:dev.profunktor.redis4cats.effects.GeoRadiusKeyStorage[K]):F[Unit]", "kind" : "abstract def"}, {"label" : "geoAdd", "tail" : "(key: K, geoValues: GeoLocation[V]*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.GeoSetter.geoAdd", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#geoAdd(key:K,geoValues:dev.profunktor.redis4cats.effects.GeoLocation[V]*):F[Unit]", "kind" : "abstract def"}, {"label" : "geoRadiusByMember", "tail" : "(key: K, value: V, dist: Distance, unit: Unit, args: GeoArgs): F[List[GeoRadiusResult[V]]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoRadiusByMember", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#geoRadiusByMember(key:K,value:V,dist:dev.profunktor.redis4cats.effects.Distance,unit:io.lettuce.core.GeoArgs.Unit,args:io.lettuce.core.GeoArgs):F[List[dev.profunktor.redis4cats.effects.GeoRadiusResult[V]]]", "kind" : "abstract def"}, {"label" : "geoRadiusByMember", "tail" : "(key: K, value: V, dist: Distance, unit: Unit): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoRadiusByMember", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#geoRadiusByMember(key:K,value:V,dist:dev.profunktor.redis4cats.effects.Distance,unit:io.lettuce.core.GeoArgs.Unit):F[Set[V]]", "kind" : "abstract def"}, {"label" : "geoRadius", "tail" : "(key: K, geoRadius: GeoRadius, unit: Unit, args: GeoArgs): F[List[GeoRadiusResult[V]]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoRadius", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#geoRadius(key:K,geoRadius:dev.profunktor.redis4cats.effects.GeoRadius,unit:io.lettuce.core.GeoArgs.Unit,args:io.lettuce.core.GeoArgs):F[List[dev.profunktor.redis4cats.effects.GeoRadiusResult[V]]]", "kind" : "abstract def"}, {"label" : "geoRadius", "tail" : "(key: K, geoRadius: GeoRadius, unit: Unit): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoRadius", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#geoRadius(key:K,geoRadius:dev.profunktor.redis4cats.effects.GeoRadius,unit:io.lettuce.core.GeoArgs.Unit):F[Set[V]]", "kind" : "abstract def"}, {"label" : "geoPos", "tail" : "(key: K, values: V*): F[List[GeoCoordinate]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoPos", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#geoPos(key:K,values:V*):F[List[dev.profunktor.redis4cats.effects.GeoCoordinate]]", "kind" : "abstract def"}, {"label" : "geoHash", "tail" : "(key: K, values: V*): F[List[Option[String]]]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoHash", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#geoHash(key:K,values:V*):F[List[Option[String]]]", "kind" : "abstract def"}, {"label" : "geoDist", "tail" : "(key: K, from: V, to: V, unit: Unit): F[Double]", "member" : "dev.profunktor.redis4cats.algebra.GeoGetter.geoDist", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#geoDist(key:K,from:V,to:V,unit:io.lettuce.core.GeoArgs.Unit):F[Double]", "kind" : "abstract def"}, {"label" : "rPushX", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.rPushX", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#rPushX(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "rPush", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.rPush", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#rPush(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "rPopLPush", "tail" : "(source: K, destination: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.rPopLPush", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#rPopLPush(source:K,destination:K):F[Option[V]]", "kind" : "abstract def"}, {"label" : "rPop", "tail" : "(key: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.rPop", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#rPop(key:K):F[Option[V]]", "kind" : "abstract def"}, {"label" : "lPushX", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.lPushX", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#lPushX(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "lPush", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.lPush", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#lPush(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "lPop", "tail" : "(key: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListPushPop.lPop", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#lPop(key:K):F[Option[V]]", "kind" : "abstract def"}, {"label" : "lTrim", "tail" : "(key: K, start: Long, stop: Long): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListSetter.lTrim", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#lTrim(key:K,start:Long,stop:Long):F[Unit]", "kind" : "abstract def"}, {"label" : "lSet", "tail" : "(key: K, index: Long, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListSetter.lSet", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#lSet(key:K,index:Long,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "lRem", "tail" : "(key: K, count: Long, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListSetter.lRem", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#lRem(key:K,count:Long,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "lInsertBefore", "tail" : "(key: K, pivot: V, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListSetter.lInsertBefore", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#lInsertBefore(key:K,pivot:V,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "lInsertAfter", "tail" : "(key: K, pivot: V, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.ListSetter.lInsertAfter", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#lInsertAfter(key:K,pivot:V,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "lRange", "tail" : "(key: K, start: Long, stop: Long): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListGetter.lRange", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#lRange(key:K,start:Long,stop:Long):F[List[V]]", "kind" : "abstract def"}, {"label" : "lLen", "tail" : "(key: K): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.ListGetter.lLen", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#lLen(key:K):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "lIndex", "tail" : "(key: K, index: Long): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListGetter.lIndex", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#lIndex(key:K,index:Long):F[Option[V]]", "kind" : "abstract def"}, {"label" : "brPopLPush", "tail" : "(timeout: Duration, source: K, destination: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.ListBlocking.brPopLPush", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#brPopLPush(timeout:scala.concurrent.duration.Duration,source:K,destination:K):F[Option[V]]", "kind" : "abstract def"}, {"label" : "brPop", "tail" : "(timeout: Duration, keys: K*): F[(K, V)]", "member" : "dev.profunktor.redis4cats.algebra.ListBlocking.brPop", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#brPop(timeout:scala.concurrent.duration.Duration,keys:K*):F[(K,V)]", "kind" : "abstract def"}, {"label" : "blPop", "tail" : "(timeout: Duration, keys: K*): F[(K, V)]", "member" : "dev.profunktor.redis4cats.algebra.ListBlocking.blPop", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#blPop(timeout:scala.concurrent.duration.Duration,keys:K*):F[(K,V)]", "kind" : "abstract def"}, {"label" : "zUnionStore", "tail" : "(destination: K, args: Option[ZStoreArgs], keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zUnionStore", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zUnionStore(destination:K,args:Option[io.lettuce.core.ZStoreArgs],keys:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "zRemRangeByScore", "tail" : "(key: K, range: ZRange[V])(ev: Numeric[V]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zRemRangeByScore", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zRemRangeByScore(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V])(implicitev:Numeric[V]):F[Unit]", "kind" : "abstract def"}, {"label" : "zRemRangeByRank", "tail" : "(key: K, start: Long, stop: Long): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zRemRangeByRank", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zRemRangeByRank(key:K,start:Long,stop:Long):F[Unit]", "kind" : "abstract def"}, {"label" : "zRemRangeByLex", "tail" : "(key: K, range: ZRange[V]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zRemRangeByLex", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zRemRangeByLex(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V]):F[Unit]", "kind" : "abstract def"}, {"label" : "zRem", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zRem", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zRem(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "zInterStore", "tail" : "(destination: K, args: Option[ZStoreArgs], keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zInterStore", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zInterStore(destination:K,args:Option[io.lettuce.core.ZStoreArgs],keys:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "zIncrBy", "tail" : "(key: K, member: V, amount: Double): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zIncrBy", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zIncrBy(key:K,member:V,amount:Double):F[Unit]", "kind" : "abstract def"}, {"label" : "zAddIncr", "tail" : "(key: K, args: Option[ZAddArgs], value: ScoreWithValue[V]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zAddIncr", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zAddIncr(key:K,args:Option[io.lettuce.core.ZAddArgs],value:dev.profunktor.redis4cats.effects.ScoreWithValue[V]):F[Unit]", "kind" : "abstract def"}, {"label" : "zAdd", "tail" : "(key: K, args: Option[ZAddArgs], values: ScoreWithValue[V]*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetSetter.zAdd", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zAdd(key:K,args:Option[io.lettuce.core.ZAddArgs],values:dev.profunktor.redis4cats.effects.ScoreWithValue[V]*):F[Unit]", "kind" : "abstract def"}, {"label" : "zScore", "tail" : "(key: K, value: V): F[Option[Double]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zScore", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zScore(key:K,value:V):F[Option[Double]]", "kind" : "abstract def"}, {"label" : "zRevRank", "tail" : "(key: K, value: V): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRank", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zRevRank(key:K,value:V):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "zRevRangeWithScores", "tail" : "(key: K, start: Long, stop: Long): F[List[ScoreWithValue[V]]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRangeWithScores", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zRevRangeWithScores(key:K,start:Long,stop:Long):F[List[dev.profunktor.redis4cats.effects.ScoreWithValue[V]]]", "kind" : "abstract def"}, {"label" : "zRevRangeByScoreWithScores", "tail" : "(key: K, range: ZRange[T], limit: Option[RangeLimit])(arg0: Numeric[T]): F[List[ScoreWithValue[V]]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRangeByScoreWithScores", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zRevRangeByScoreWithScores[T](key:K,range:dev.profunktor.redis4cats.effects.ZRange[T],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit])(implicitevidence$4:Numeric[T]):F[List[dev.profunktor.redis4cats.effects.ScoreWithValue[V]]]", "kind" : "abstract def"}, {"label" : "zRevRangeByScore", "tail" : "(key: K, range: ZRange[T], limit: Option[RangeLimit])(arg0: Numeric[T]): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRangeByScore", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zRevRangeByScore[T](key:K,range:dev.profunktor.redis4cats.effects.ZRange[T],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit])(implicitevidence$3:Numeric[T]):F[List[V]]", "kind" : "abstract def"}, {"label" : "zRevRangeByLex", "tail" : "(key: K, range: ZRange[V], limit: Option[RangeLimit]): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRangeByLex", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zRevRangeByLex(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit]):F[List[V]]", "kind" : "abstract def"}, {"label" : "zRevRange", "tail" : "(key: K, start: Long, stop: Long): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRevRange", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zRevRange(key:K,start:Long,stop:Long):F[List[V]]", "kind" : "abstract def"}, {"label" : "zRank", "tail" : "(key: K, value: V): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRank", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zRank(key:K,value:V):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "zRangeWithScores", "tail" : "(key: K, start: Long, stop: Long): F[List[ScoreWithValue[V]]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRangeWithScores", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zRangeWithScores(key:K,start:Long,stop:Long):F[List[dev.profunktor.redis4cats.effects.ScoreWithValue[V]]]", "kind" : "abstract def"}, {"label" : "zRangeByScoreWithScores", "tail" : "(key: K, range: ZRange[T], limit: Option[RangeLimit])(arg0: Numeric[T]): F[List[ScoreWithValue[V]]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRangeByScoreWithScores", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zRangeByScoreWithScores[T](key:K,range:dev.profunktor.redis4cats.effects.ZRange[T],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit])(implicitevidence$2:Numeric[T]):F[List[dev.profunktor.redis4cats.effects.ScoreWithValue[V]]]", "kind" : "abstract def"}, {"label" : "zRangeByScore", "tail" : "(key: K, range: ZRange[T], limit: Option[RangeLimit])(arg0: Numeric[T]): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRangeByScore", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zRangeByScore[T](key:K,range:dev.profunktor.redis4cats.effects.ZRange[T],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit])(implicitevidence$1:Numeric[T]):F[List[V]]", "kind" : "abstract def"}, {"label" : "zRangeByLex", "tail" : "(key: K, range: ZRange[V], limit: Option[RangeLimit]): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRangeByLex", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zRangeByLex(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V],limit:Option[dev.profunktor.redis4cats.effects.RangeLimit]):F[List[V]]", "kind" : "abstract def"}, {"label" : "zRange", "tail" : "(key: K, start: Long, stop: Long): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zRange", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zRange(key:K,start:Long,stop:Long):F[List[V]]", "kind" : "abstract def"}, {"label" : "zLexCount", "tail" : "(key: K, range: ZRange[V]): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zLexCount", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zLexCount(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V]):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "zCount", "tail" : "(key: K, range: ZRange[V])(ev: Numeric[V]): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zCount", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zCount(key:K,range:dev.profunktor.redis4cats.effects.ZRange[V])(implicitev:Numeric[V]):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "zCard", "tail" : "(key: K): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.SortedSetGetter.zCard", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#zCard(key:K):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "sIsMember", "tail" : "(key: K, value: V): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.SetCommands.sIsMember", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#sIsMember(key:K,value:V):F[Boolean]", "kind" : "abstract def"}, {"label" : "sRem", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetDeletion.sRem", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#sRem(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "sPop", "tail" : "(key: K, count: Long): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetDeletion.sPop", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#sPop(key:K,count:Long):F[Set[V]]", "kind" : "abstract def"}, {"label" : "sPop", "tail" : "(key: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetDeletion.sPop", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#sPop(key:K):F[Option[V]]", "kind" : "abstract def"}, {"label" : "sMove", "tail" : "(source: K, destination: K, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetSetter.sMove", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#sMove(source:K,destination:K,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "sInterStore", "tail" : "(destination: K, keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetSetter.sInterStore", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#sInterStore(destination:K,keys:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "sDiffStore", "tail" : "(destination: K, keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetSetter.sDiffStore", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#sDiffStore(destination:K,keys:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "sAdd", "tail" : "(key: K, values: V*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetSetter.sAdd", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#sAdd(key:K,values:V*):F[Unit]", "kind" : "abstract def"}, {"label" : "sUnionStore", "tail" : "(destination: K, keys: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sUnionStore", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#sUnionStore(destination:K,keys:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "sUnion", "tail" : "(keys: K*): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sUnion", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#sUnion(keys:K*):F[Set[V]]", "kind" : "abstract def"}, {"label" : "sRandMember", "tail" : "(key: K, count: Long): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sRandMember", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#sRandMember(key:K,count:Long):F[List[V]]", "kind" : "abstract def"}, {"label" : "sRandMember", "tail" : "(key: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sRandMember", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#sRandMember(key:K):F[Option[V]]", "kind" : "abstract def"}, {"label" : "sMembers", "tail" : "(key: K): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sMembers", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#sMembers(key:K):F[Set[V]]", "kind" : "abstract def"}, {"label" : "sInter", "tail" : "(keys: K*): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sInter", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#sInter(keys:K*):F[Set[V]]", "kind" : "abstract def"}, {"label" : "sDiff", "tail" : "(keys: K*): F[Set[V]]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sDiff", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#sDiff(keys:K*):F[Set[V]]", "kind" : "abstract def"}, {"label" : "sCard", "tail" : "(key: K): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.SetGetter.sCard", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#sCard(key:K):F[Long]", "kind" : "abstract def"}, {"label" : "hExists", "tail" : "(key: K, field: K): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.HashCommands.hExists", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#hExists(key:K,field:K):F[Boolean]", "kind" : "abstract def"}, {"label" : "hDel", "tail" : "(key: K, fields: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.HashCommands.hDel", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#hDel(key:K,fields:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "hIncrByFloat", "tail" : "(key: K, field: K, amount: Double)(N: Numeric[V]): F[Double]", "member" : "dev.profunktor.redis4cats.algebra.HashIncrement.hIncrByFloat", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#hIncrByFloat(key:K,field:K,amount:Double)(implicitN:Numeric[V]):F[Double]", "kind" : "abstract def"}, {"label" : "hIncrBy", "tail" : "(key: K, field: K, amount: Long)(N: Numeric[V]): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.HashIncrement.hIncrBy", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#hIncrBy(key:K,field:K,amount:Long)(implicitN:Numeric[V]):F[Long]", "kind" : "abstract def"}, {"label" : "hmSet", "tail" : "(key: K, fieldValues: Map[K, V]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.HashSetter.hmSet", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#hmSet(key:K,fieldValues:Map[K,V]):F[Unit]", "kind" : "abstract def"}, {"label" : "hSetNx", "tail" : "(key: K, field: K, value: V): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.HashSetter.hSetNx", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#hSetNx(key:K,field:K,value:V):F[Boolean]", "kind" : "abstract def"}, {"label" : "hSet", "tail" : "(key: K, field: K, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.HashSetter.hSet", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#hSet(key:K,field:K,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "hLen", "tail" : "(key: K): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hLen", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#hLen(key:K):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "hStrLen", "tail" : "(key: K, field: K): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hStrLen", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#hStrLen(key:K,field:K):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "hVals", "tail" : "(key: K): F[List[V]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hVals", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#hVals(key:K):F[List[V]]", "kind" : "abstract def"}, {"label" : "hKeys", "tail" : "(key: K): F[List[K]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hKeys", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#hKeys(key:K):F[List[K]]", "kind" : "abstract def"}, {"label" : "hmGet", "tail" : "(key: K, fields: K*): F[Map[K, V]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hmGet", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#hmGet(key:K,fields:K*):F[Map[K,V]]", "kind" : "abstract def"}, {"label" : "hGetAll", "tail" : "(key: K): F[Map[K, V]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hGetAll", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#hGetAll(key:K):F[Map[K,V]]", "kind" : "abstract def"}, {"label" : "hGet", "tail" : "(key: K, field: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.HashGetter.hGet", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#hGet(key:K,field:K):F[Option[V]]", "kind" : "abstract def"}, {"label" : "bitOpXor", "tail" : "(destination: K, sources: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitOpXor", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#bitOpXor(destination:K,sources:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "bitOpOr", "tail" : "(destination: K, sources: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitOpOr", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#bitOpOr(destination:K,sources:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "bitOpNot", "tail" : "(destination: K, source: K): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitOpNot", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#bitOpNot(destination:K,source:K):F[Unit]", "kind" : "abstract def"}, {"label" : "bitOpAnd", "tail" : "(destination: K, sources: K*): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitOpAnd", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#bitOpAnd(destination:K,sources:K*):F[Unit]", "kind" : "abstract def"}, {"label" : "bitPos", "tail" : "(key: K, state: Boolean, start: Long, end: Long): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitPos", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#bitPos(key:K,state:Boolean,start:Long,end:Long):F[Long]", "kind" : "abstract def"}, {"label" : "bitPos", "tail" : "(key: K, state: Boolean, start: Long): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitPos", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#bitPos(key:K,state:Boolean,start:Long):F[Long]", "kind" : "abstract def"}, {"label" : "bitPos", "tail" : "(key: K, state: Boolean): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitPos", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#bitPos(key:K,state:Boolean):F[Long]", "kind" : "abstract def"}, {"label" : "bitCount", "tail" : "(key: K, start: Long, end: Long): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitCount", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#bitCount(key:K,start:Long,end:Long):F[Long]", "kind" : "abstract def"}, {"label" : "bitCount", "tail" : "(key: K): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Bits.bitCount", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#bitCount(key:K):F[Long]", "kind" : "abstract def"}, {"label" : "incrByFloat", "tail" : "(key: K, amount: Double)(N: Numeric[V]): F[Double]", "member" : "dev.profunktor.redis4cats.algebra.Increment.incrByFloat", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#incrByFloat(key:K,amount:Double)(implicitN:Numeric[V]):F[Double]", "kind" : "abstract def"}, {"label" : "incrBy", "tail" : "(key: K, amount: Long)(N: Numeric[V]): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Increment.incrBy", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#incrBy(key:K,amount:Long)(implicitN:Numeric[V]):F[Long]", "kind" : "abstract def"}, {"label" : "incr", "tail" : "(key: K)(N: Numeric[V]): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Increment.incr", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#incr(key:K)(implicitN:Numeric[V]):F[Long]", "kind" : "abstract def"}, {"label" : "decrBy", "tail" : "(key: K, amount: Long)(N: Numeric[V]): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Decrement.decrBy", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#decrBy(key:K,amount:Long)(implicitN:Numeric[V]):F[Long]", "kind" : "abstract def"}, {"label" : "decr", "tail" : "(key: K)(N: Numeric[V]): F[Long]", "member" : "dev.profunktor.redis4cats.algebra.Decrement.decr", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#decr(key:K)(implicitN:Numeric[V]):F[Long]", "kind" : "abstract def"}, {"label" : "mSetNx", "tail" : "(keyValues: Map[K, V]): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.MultiKey.mSetNx", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#mSetNx(keyValues:Map[K,V]):F[Boolean]", "kind" : "abstract def"}, {"label" : "mSet", "tail" : "(keyValues: Map[K, V]): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.MultiKey.mSet", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#mSet(keyValues:Map[K,V]):F[Unit]", "kind" : "abstract def"}, {"label" : "mGet", "tail" : "(keys: Set[K]): F[Map[K, V]]", "member" : "dev.profunktor.redis4cats.algebra.MultiKey.mGet", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#mGet(keys:Set[K]):F[Map[K,V]]", "kind" : "abstract def"}, {"label" : "setRange", "tail" : "(key: K, value: V, offset: Long): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Setter.setRange", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#setRange(key:K,value:V,offset:Long):F[Unit]", "kind" : "abstract def"}, {"label" : "setEx", "tail" : "(key: K, value: V, expiresIn: FiniteDuration): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Setter.setEx", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#setEx(key:K,value:V,expiresIn:scala.concurrent.duration.FiniteDuration):F[Unit]", "kind" : "abstract def"}, {"label" : "setNx", "tail" : "(key: K, value: V): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.Setter.setNx", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#setNx(key:K,value:V):F[Boolean]", "kind" : "abstract def"}, {"label" : "set", "tail" : "(key: K, value: V, setArgs: SetArgs): F[Boolean]", "member" : "dev.profunktor.redis4cats.algebra.Setter.set", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#set(key:K,value:V,setArgs:dev.profunktor.redis4cats.effects.SetArgs):F[Boolean]", "kind" : "abstract def"}, {"label" : "set", "tail" : "(key: K, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Setter.set", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#set(key:K,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "getSet", "tail" : "(key: K, value: V): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.Setter.getSet", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#getSet(key:K,value:V):F[Option[V]]", "kind" : "abstract def"}, {"label" : "append", "tail" : "(key: K, value: V): F[Unit]", "member" : "dev.profunktor.redis4cats.algebra.Setter.append", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#append(key:K,value:V):F[Unit]", "kind" : "abstract def"}, {"label" : "strLen", "tail" : "(key: K): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.Getter.strLen", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#strLen(key:K):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "getRange", "tail" : "(key: K, start: Long, end: Long): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.Getter.getRange", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#getRange(key:K,start:Long,end:Long):F[Option[V]]", "kind" : "abstract def"}, {"label" : "getBit", "tail" : "(key: K, offset: Long): F[Option[Long]]", "member" : "dev.profunktor.redis4cats.algebra.Getter.getBit", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#getBit(key:K,offset:Long):F[Option[Long]]", "kind" : "abstract def"}, {"label" : "get", "tail" : "(key: K): F[Option[V]]", "member" : "dev.profunktor.redis4cats.algebra.Getter.get", "link" : "dev\/profunktor\/redis4cats\/RedisCommands.html#get(key:K):F[Option[V]]", "kind" : "abstract def"}], "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/RedisCommands$.html", "members_object" : [{"label" : "LiftKOps", "tail" : "", "member" : "dev.profunktor.redis4cats.RedisCommands.LiftKOps", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#LiftKOps[F[_],K,V]extendsAnyVal", "kind" : "implicit final class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/RedisCommands$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "dev\/profunktor\/redis4cats\/RedisCommands.html", "kind" : "trait"}, {"name" : "dev.profunktor.redis4cats.Runner", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/Runner$.html", "members_object" : [{"label" : "apply", "tail" : "(arg0: Concurrent[F], arg1: Log[F], arg2: Timer[F]): RunnerPartiallyApplied[F]", "member" : "dev.profunktor.redis4cats.Runner.apply", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#apply[F[_]](implicitevidence$1:cats.effect.Concurrent[F],implicitevidence$2:dev.profunktor.redis4cats.effect.Log[F],implicitevidence$3:cats.effect.Timer[F]):dev.profunktor.redis4cats.RunnerPartiallyApplied[F]", "kind" : "def"}, {"label" : "Ops", "tail" : "", "member" : "dev.profunktor.redis4cats.Runner.Ops", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#Ops[F[_]]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "CancelFibers", "tail" : "", "member" : "dev.profunktor.redis4cats.Runner.CancelFibers", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#CancelFibers[F[_]]=Throwable=>F[Unit]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/Runner$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/Runner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "dev.profunktor.redis4cats.transactions", "shortDescription" : "", "object" : "dev\/profunktor\/redis4cats\/transactions$.html", "members_object" : [{"label" : "RedisTransaction", "tail" : "", "member" : "dev.profunktor.redis4cats.transactions.RedisTransaction", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#RedisTransaction[F[_],K,V]extendsProductwithSerializable", "kind" : "case class"}, {"label" : "TransactionDiscarded", "tail" : "", "member" : "dev.profunktor.redis4cats.transactions.TransactionDiscarded", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#TransactionDiscarded", "kind" : "object"}, {"label" : "TransactionAborted", "tail" : "", "member" : "dev.profunktor.redis4cats.transactions.TransactionAborted", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#TransactionAborted", "kind" : "object"}, {"label" : "TransactionError", "tail" : "", "member" : "dev.profunktor.redis4cats.transactions.TransactionError", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#TransactionErrorextendsThrowablewithNoStackTrace", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "dev\/profunktor\/redis4cats\/transactions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "dev\/profunktor\/redis4cats\/transactions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};